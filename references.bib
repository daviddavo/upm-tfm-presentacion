% GEN BY make.com @ daviddavo
%------- START OF 0-100

@online{buterin_governance_2018,
	title = {Governance, Part 2: Plutocracy Is Still Bad},
	url = {https://vitalik.ca/general/2018/03/28/plutocracy.html},
	author = {Buterin, Vitalik},
	urldate = {2023-07-04},
	date = {2018-03-28},
	keywords = {⛔ No {INSPIRE} recid found},
}

@misc{zhang_introduction_2022,
	title = {An Introduction to Matrix factorization and Factorization Machines in Recommendation System, and Beyond},
	url = {http://arxiv.org/abs/2203.11026},
	doi = {10.48550/arXiv.2203.11026},
	abstract = {This paper aims at a better understanding of matrix factorization ({MF}), factorization machines ({FM}), and their combination with deep algorithms' application in recommendation systems. Specifically, this paper will focus on Singular Value Decomposition ({SVD}) and its derivations, e.g Funk-{SVD}, {SVD}++, etc. Step-by-step formula calculation and explainable pictures are displayed. What's more, we explain the {DeepFM} model in which {FM} is assisted by deep learning. Through numerical examples, we attempt to tie the theory to real-world problems.},
	number = {{arXiv}:2203.11026},
	publisher = {{arXiv}},
	author = {Zhang, Yuefeng},
	urldate = {2024-05-16},
	date = {2022-03-12},
	eprinttype = {arxiv},
	eprint = {2203.11026 [cs]},
	keywords = {Computer Science - Information Retrieval, Computer Science - Machine Learning, ⛔ No {INSPIRE} recid found},
}

@software{frederickson_implicit_2018,
	title = {Implicit: Fast Python Collaborative Filtering for Implicit Feedback Datasets},
	rights = {{MIT} License},
	url = {https://github.com/benfred/implicit},
	shorttitle = {Implicit},
	author = {Frederickson, Ben},
	date = {2018},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{greco_stackintheflow_2018,
	location = {New York, {NY}, {USA}},
	title = {{StackInTheFlow}: behavior-driven recommendation system for stack overflow posts},
	isbn = {978-1-4503-5663-3},
	url = {https://dl.acm.org/doi/10.1145/3183440.3183477},
	doi = {10.1145/3183440.3183477},
	series = {{ICSE} '18},
	shorttitle = {{StackInTheFlow}},
	abstract = {Developer behavior in the {IDE}, including commands and events and complementing the active source code, provides useful context to in-{IDE} recommendation systems. This paper presents {StackInTheFlow}, a tool that generates interpretable queries to Stack Overflow, and recommends Stack Overflow posts when a developer is observed to be facing difficulty, defined by encountering error messages or not appearing to make progress. {StackInTheFlow} monitors clicks on its retrieved results, and, over time, personalizes the retrieved posts to a specific set of Stack Overflow tags. Video: http://bit.ly/sitfdemo},
	pages = {5--8},
	booktitle = {Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings},
	publisher = {Association for Computing Machinery},
	author = {Greco, Chase and Haden, Tyler and Damevski, Kostadin},
	urldate = {2024-01-31},
	date = {2018-05-27},
	note = {11 citations ({CrossRef} 2024/5/19)},
	keywords = {{IDE}, Ignorebib, recommendation system, stack overflow, ⛔ No {INSPIRE} recid found},
}

@article{xie_time-series_2022,
	title = {Time-Series Snapshot Network for Partner Recommendation: A Case Study on {OSS}},
	volume = {9},
	issn = {2329-924X},
	doi = {10.1109/TCSS.2021.3070914},
	shorttitle = {Time-Series Snapshot Network for Partner Recommendation},
	abstract = {The last decade has witnessed the rapid growth of open-source software ({OSS}). Still, all contributors may find it difficult to assimilate into the {OSS} community even they are enthusiastic to make contributions. We thus suggest that partner recommendation across different roles may benefit both the users and developers, i.e., once we are able to make successful recommendation for those in need, it may dramatically contribute to the productivity of developers and the enthusiasm of users, thus further boosting {OSS} projects’ development. Motivated by this potential, we model the partner recommendation as link prediction task from email data via network embedding methods. In this article, we introduce time-series snapshot network ({TSSN}) that is a mixture network to model the interactions among users and developers. Based on the established {TSSN}, we perform temporal biased walk ({TBW}) to automatically capture both temporal and structural information of the email network, i.e., the behavioral similarity between individuals in the {OSS} email network. Experiments on ten Apache data sets demonstrate that the proposed {TBW} significantly outperforms a number of advanced random walk-based embedding methods, leading to the state-of-the-art recommendation performance.},
	pages = {1048--1059},
	number = {4},
	journaltitle = {{IEEE} Transactions on Computational Social Systems},
	author = {Xie, Yunyi and Chen, Jinyin and Zhang, Jian and Shu, Xincheng and Xuan, Qi},
	date = {2022-08},
	note = {1 citations ({CrossRef} 2024/5/19)
Conference Name: {IEEE} Transactions on Computational Social Systems},
	keywords = {Data models, Link prediction, Productivity, Search problems, Social networking (online), Sustainable development, Synchronization, {TFM}::{SOTA}::{DONE}, Task analysis, network embedding, open-source software ({OSS}), partner recommendation, random walk, social network, temporal network, ⛔ No {INSPIRE} recid found},
}

@article{liaw_tune_2018,
	title = {Tune: A Research Platform for Distributed Model Selection and Training},
	url = {http://arxiv.org/abs/1807.05118},
	doi = {10.48550/arXiv.1807.05118},
	shorttitle = {Tune},
	abstract = {Modern machine learning algorithms are increasingly computationally demanding, requiring specialized hardware and distributed computation to achieve high performance in a reasonable time frame. Many hyperparameter search algorithms have been proposed for improving the efficiency of model selection, however their adaptation to the distributed compute environment is often ad-hoc. We propose Tune, a unified framework for model selection and training that provides a narrow-waist interface between training scripts and search algorithms. We show that this interface meets the requirements for a broad range of hyperparameter search algorithms, allows straightforward scaling of search to large clusters, and simplifies algorithm implementation. We demonstrate the implementation of several state-of-the-art hyperparameter search algorithms in Tune. Tune is available at http://ray.readthedocs.io/en/latest/tune.html.},
	author = {Liaw, Richard and Liang, Eric and Nishihara, Robert and Moritz, Philipp and Gonzalez, Joseph E. and Stoica, Ion},
	urldate = {2024-01-29},
	date = {2018-07-13},
	note = {31 citations ({INSPIRE} 2024/5/19)
31 citations w/o self ({INSPIRE} 2024/5/19)},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing, Computer Science - Machine Learning, Statistics - Machine Learning},
}

@article{gao_survey_2023,
	title = {A Survey of Graph Neural Networks for Recommender Systems: Challenges, Methods, and Directions},
	volume = {1},
	url = {https://dl.acm.org/doi/10.1145/3568022},
	doi = {10.1145/3568022},
	shorttitle = {A Survey of Graph Neural Networks for Recommender Systems},
	abstract = {Recommender system is one of the most important information services on today’s Internet. Recently, graph neural networks have become the new state-of-the-art approach to recommender systems. In this survey, we conduct a comprehensive review of the literature on graph neural network-based recommender systems. We first introduce the background and the history of the development of both recommender systems and graph neural networks. For recommender systems, in general, there are four aspects for categorizing existing works: stage, scenario, objective, and application. For graph neural networks, the existing methods consist of two categories: spectral models and spatial ones. We then discuss the motivation of applying graph neural networks into recommender systems, mainly consisting of the high-order connectivity, the structural property of data and the enhanced supervision signal. We then systematically analyze the challenges in graph construction, embedding propagation/aggregation, model optimization, and computation efficiency. Afterward and primarily, we provide a comprehensive overview of a multitude of existing works of graph neural network-based recommender systems, following the taxonomy above. Finally, we raise discussions on the open problems and promising future directions in this area. We summarize the representative papers along with their code repositories in https://github.com/tsinghua-fib-lab/{GNN}-Recommender-Systems.},
	pages = {3:1--3:51},
	number = {1},
	journaltitle = {{ACM} Transactions on Recommender Systems},
	shortjournal = {{ACM} Trans. Recomm. Syst.},
	author = {Gao, Chen and Zheng, Yu and Li, Nian and Li, Yinfeng and Qin, Yingrong and Piao, Jinghua and Quan, Yuhan and Chang, Jianxin and Jin, Depeng and He, Xiangnan and Li, Yong},
	urldate = {2023-07-17},
	date = {2023-03-03},
	note = {103 citations ({CrossRef} 2024/5/19)},
	keywords = {Recommender systems, {TFM}::{SOTA}::{TODO}, graph neural networks, graph representation learning, information retrieval, ⛔ No {INSPIRE} recid found},
}

@article{constantino_dual_2023,
	title = {Dual analysis for helping developers to find collaborators based on co-changed files: An empirical study},
	volume = {53},
	rights = {© 2023 John Wiley \& Sons Ltd.},
	issn = {1097-024X},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.3194},
	doi = {10.1002/spe.3194},
	shorttitle = {Dual analysis for helping developers to find collaborators based on co-changed files},
	abstract = {Software developers must collaborate at all stages of the software life-cycle to create successful complex software systems. To enable this collaboration, social coding platforms, for example, {GitHub}, include an increasing number of tools to support collaboration. However, for large projects with hundreds of dynamic developers, such as several successful open–source projects, it can be complex to find developers with the same interest and familiarity and thus, gain suitable collaborations and new insights. In this context, resources and efforts may be wasted, discouraging many developers from contributing. Moreover, it can be costly to manage many contributions, which is another challenge for the maintainer who wants to take advantage of this small, timid, but valuable contribution made by a volunteer developer in a short time. In this context, this paper presents an empirical study aiming to evaluate two strategies to recommend collaborators based on co-changed files. Inspired in the {TF}–{IDF} (Term Frequency–Inverse Document Frequency) weighting scheme established in the Information Retrieval field, these strategies first estimate the importance of relevant files modified by developers and use these estimates to represent each developer “profile”. As a second step, they estimate the similarity between developers using the Cosine metric, providing top-ranked developers according to this measure as recommendations. We evaluated these strategies based on an extensive survey with 102 real–world developers. We observed that developers have interest and familiarity with the co-changed files for all strategies evaluated. These considerations are of relevance because many opportunities for contributions to the project are linked to coding. Thus, theses results may indicate one less barrier for improving collaboration among developers. Overall, the strategies present an acceptance rate of up to 81\%, contributing to the discovery of further collaborators.},
	pages = {1438--1464},
	number = {6},
	journaltitle = {Software: Practice and Experience},
	author = {Constantino, Kattiana and Belém, Fabiano and Figueiredo, Eduardo},
	urldate = {2023-07-12},
	date = {2023},
	langid = {english},
	note = {1 citations ({CrossRef} 2024/5/19)},
	keywords = {Curated by Javier, {GitHub}, {TFM}::{SOTA}::{DONE}, collaboration in software development, collaborative software development, developer recommendation, distributed collaboration, ⛔ No {INSPIRE} recid found},
}

@article{fan_insight_2023,
	title = {Insight into Voting in {DAOs}: Conceptual Analysis and A Proposal for Evaluation Framework},
	issn = {1558-156X},
	doi = {10.1109/MNET.137.2200561},
	shorttitle = {Insight into Voting in {DAOs}},
	abstract = {Driven by the development of blockchain infrastructures and the promotion of Web 3, more than 4000 Decentralized Autonomous Organizations ({DAOs}) have been developed as online organizations jointly owned and managed by their members who work for the same interests. Voting mechanisms as the democratic administration of {DAOs} without the involvement of central authority, are crucial to both the development of the {DAO} community and the protection of individual interests. This paper is one of the first analyses of the critical role of voting mechanisms in {DAOs}' operation. In the absence of systematic studies of voting mechanisms in {DAOs}, we propose five tiers of decentralization in {DAO} voting which marks the critical difference between {DAO} voting and conventional voting. We also define four dimensions to comprehensively evaluate the performance of {DAO} voting mechanisms, which identify the demands and characteristics of {DAO} voting and put forward clear design guidelines for voting mechanisms in {DAOs}. Finally, we take seven typical voting mechanisms as examples and analyze their performance in our proposed evaluation schemes.},
	pages = {1--8},
	journaltitle = {{IEEE} Network},
	author = {Fan, Yixuan and Zhang, Lei and Wang, Ruiyu and Imran, Muhammad Ali},
	date = {2023},
	note = {2 citations ({CrossRef} 2024/5/19)},
	keywords = {{ComSoc}::Citable, Decentralized autonomous organization, Decision making, Distributed ledger, Proposals, Resource management, Smart contracts, Systematics, ⛔ No {INSPIRE} recid found},
}

@inproceedings{gras_recommendation_2023,
	title = {A Recommendation System for Decentralized Autonomous Organization},
	url = {https://ieeexplore.ieee.org/abstract/document/10113941?signout=success},
	doi = {10.1109/OTCON56053.2023.10113941},
	abstract = {Structured data analysis has historically achieved remarkable success. However, the analysis of massive amounts of unstructured video data is still a challenging problem. Over one billion people use {YouTube}, a Google corporation, which generates billions of views. {YouTube} data is being created in extremely large quantities, and with a massive demand to store, analyze, and carefully study large amounts of data to make it usable for big data analytics. For the analysis of these {YouTube} data, the absence of {YouTube} Shorts which has become a current trend is the limitation. To address this limitation, {YouTube} Shorts along with traditional duration videos have been considered for analysis in this work. For analyzing these data, various Machine Learning ({ML}) techniques like clustering and classification have been considered to categorize the content creators into three different categories such as highly rated, moderately rated and lowly rated. These ratings for recommendation assist content creators in enhancing the value of their brand and the users are benefited by consuming, exchanging shares and promoting the content. The results observed show that the accuracy of the Random Forrest and Gradient Boosting classifiers have equivalent performance i.e., around 98\% which are suitable for the above recommendation system. Hence, the objective to encourage investors and fans to become active stakeholders and owners of the creator’s micro-economy is addressed in this paper.},
	eventtitle = {2022 {OPJU} International Technology Conference on Emerging Technologies for Sustainable Development ({OTCON})},
	pages = {1--6},
	booktitle = {2022 {OPJU} International Technology Conference on Emerging Technologies for Sustainable Development ({OTCON})},
	author = {Gras, Elisha and George, Rosmi and Churchill, Kington and Kiruthika, M.},
	urldate = {2024-02-26},
	date = {2023-02},
	note = {1 citations ({CrossRef} 2024/5/19)},
	keywords = {Boosting, {DAO}, Decentralized autonomous organization, Ignorebib, Internet, Market research, Stakeholders, Sustainable development, Video on demand, analysis, machine learning, recommendation, youtube, ⛔ No {INSPIRE} recid found},
}

@article{diamantopoulos_automated_2023,
	title = {Automated issue assignment using topic modelling on Jira issue tracking data},
	volume = {17},
	rights = {© 2023 The Authors. {IET} Software published by John Wiley \& Sons Ltd.},
	issn = {1751-8814},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1049/sfw2.12129},
	doi = {10.1049/sfw2.12129},
	abstract = {As more and more software teams use online issue tracking systems to collaborate on software projects, the accurate assignment of new issues to the most suitable contributors may have significant impact on the success of the project. As a result, several research efforts have been directed towards automating this process to save considerable time and effort. However, most approaches focus mainly on software bugs and employ models that do not sufficiently take into account the semantics and the non-textual metadata of issues and/or produce models that may require manual tuning. A methodology that extracts both textual and non-textual features from different types of issues is designed, providing a Jira dataset that involves not only bugs but also new features, issues related to documentation, patches, etc. Moreover, the semantics of issue text are effectively captured by employing a topic modelling technique that is optimised using the assignment result. Finally, this methodology aggregates probabilities from a set of individual models to provide the final assignment. Upon evaluating this approach in an automated issue assignment setting using a dataset of Jira issues, the authors conclude that it can be effective for automated issue assignment.},
	pages = {333--344},
	number = {3},
	journaltitle = {{IET} Software},
	author = {Diamantopoulos, Themistoklis and Saoulidis, Nikolaos and Symeonidis, Andreas},
	urldate = {2023-07-12},
	date = {2023},
	langid = {english},
	keywords = {Curated by Javier, {TFM}::{SOTA}::{DONE}, software development management, software engineering, software maintenance, software management, ⛔ No {INSPIRE} recid found},
}

@article{ji_critical_2023,
	title = {A Critical Study on Data Leakage in Recommender System Offline Evaluation},
	volume = {41},
	issn = {1046-8188, 1558-2868},
	url = {https://dl.acm.org/doi/10.1145/3569930},
	doi = {10.1145/3569930},
	abstract = {Recommender models are hard to evaluate, particularly under offline setting. In this article, we provide a comprehensive and critical analysis of the data leakage issue in recommender system offline evaluation. Data leakage is caused by not observing global timeline in evaluating recommenders e.g., train/test data split does not follow global timeline. As a result, a model learns from the user-item interactions that are not expected to be available at the prediction time. We first show the temporal dynamics of user-item interactions along global timeline, then explain why data leakage exists for collaborative filtering models. Through carefully designed experiments, we show that all models indeed recommend future items that are not available at the time point of a test instance, as the result of data leakage. The experiments are conducted with four widely used baseline models—{BPR}, {NeuMF}, {SASRec}, and {LightGCN}, on four popular offline datasets—{MovieLens}-25M, Yelp, Amazon-music, and Amazon-electronic, adopting leave-last-one-out data split.
              
                1
              
              We further show that data leakage does impact models’ recommendation accuracy. Their relative performance orders thus become unpredictable with different amount of leaked future data in training. To evaluate recommendation systems in a realistic manner in offline setting, we propose a timeline scheme, which calls for a revisit of the recommendation model design.},
	pages = {1--27},
	number = {3},
	journaltitle = {{ACM} Transactions on Information Systems},
	shortjournal = {{ACM} Trans. Inf. Syst.},
	author = {Ji, Yitong and Sun, Aixin and Zhang, Jie and Li, Chenliang},
	urldate = {2024-04-29},
	date = {2023-07-31},
	langid = {english},
	note = {6 citations ({CrossRef} 2024/5/19)},
	keywords = {⛔ No {INSPIRE} recid found},
}

@misc{hayashi_using_2023,
	title = {Using Wikipedia Editor Information to Build High-performance Recommender Systems},
	url = {http://arxiv.org/abs/2306.08636},
	doi = {10.48550/arXiv.2306.08636},
	abstract = {Wikipedia has high-quality articles on a variety of topics and has been used in diverse research areas. In this study, a method is presented for using Wikipedia's editor information to build recommender systems in various domains that outperform content-based systems.},
	number = {{arXiv}:2306.08636},
	publisher = {{arXiv}},
	author = {Hayashi, Katsuhiko},
	urldate = {2023-07-12},
	date = {2023-06-14},
	eprinttype = {arxiv},
	eprint = {2306.08636 [cs]},
	keywords = {Computer Science - Information Retrieval, Computer Science - Social and Information Networks, Curated by Javier, Ignorebib, {TFM}::{SOTA}::Descartado, ⛔ No {INSPIRE} recid found},
}

@inbook{garzia_voting_2019,
	title = {Voting Advice Applications},
	isbn = {978-0-19-022863-7},
	abstract = {Voting Advice Applications ({VAAs}) are online tools that assist citizens with their voting decisions. They are offered to voters before elections in many countries and have experienced remarkable success. Recently flourishing research on {VAAs} addresses this phenomenon and provides explanations for the dissemination and popularity of these tools. Moreover, {VAAs} have been analyzed regarding their effects on political parties, candidates, and on voters in regard to their electoral behavior. Research shows that using a {VAA} indeed makes a difference, while the effect depends strongly on the way a {VAA} is designed and by whom it is used. The abundance of data generated by {VAAs} bears potential for comparative studies of public opinion and party systems over time and across countries, and thereby bridges research on {VAAs} to general questions of political science research.},
	booktitle = {Oxford Research Encyclopedia of Politics},
	publisher = {Oxford University Press},
	author = {Garzia, Diego and Marschall, Stefan},
	bookauthor = {Garzia, Diego and Marschall, Stefan},
	urldate = {2024-02-26},
	date = {2019-03-26},
	langid = {english},
	doi = {10.1093/acrefore/9780190228637.013.620},
	keywords = {⛔ No {INSPIRE} recid found},
}

@misc{arroyo_dao_2024,
	title = {{DAO} Analyzer dataset},
	rights = {Creative Commons Zero v1.0 Universal},
	url = {https://zenodo.org/doi/10.5281/zenodo.7669709},
	doi = {10.5281/ZENODO.7669709},
	abstract = {{DAO}-Analyzer's dataset.


Explore data from Decentralized Autonomous Organizations deployed on the {DAOstack}, {DAOhaus} and Aragon platforms.},
	version = {2024-01-17},
	publisher = {Zenodo},
	author = {Arroyo, Javier and Davó, David and Faqir-Rhazoui, Youssef},
	urldate = {2024-01-17},
	date = {2024-01-17},
	keywords = {blockchain, decentralized autonomous organizations, ethereum, online communities, ⛔ No {INSPIRE} recid found},
}

@misc{tan_open_2023,
	title = {Open Problems in {DAOs}},
	url = {http://arxiv.org/abs/2310.19201},
	doi = {10.48550/arXiv.2310.19201},
	abstract = {Decentralized autonomous organizations ({DAOs}) are a new, rapidly-growing class of organizations governed by smart contracts. Here we describe how researchers can contribute to the emerging science of {DAOs} and other digitally-constituted organizations. From granular privacy primitives to mechanism designs to model laws, we identify high-impact problems in the {DAO} ecosystem where existing gaps might be tackled through a new data set or by applying tools and ideas from existing research fields such as political science, computer science, economics, law, and organizational science. Our recommendations encompass exciting research questions as well as promising business opportunities. We call on the wider research community to join the global effort to invent the next generation of organizations.},
	number = {{arXiv}:2310.19201},
	publisher = {{arXiv}},
	author = {Tan, Joshua Z. and Merk, Tara and Hubbard, Sarah and Oak, Eliza R. and Pirovich, Joni and Rennie, Ellie and Hoefer, Rolf and Zargham, Michael and Potts, Jason and Berg, Chris and Youngblom, Reuben and De Filippi, Primavera and Frey, Seth and Strnad, Jeff and Mannan, Morshed and Nabben, Kelsie and Elrifai, Silke Noa and Hartnell, Jake and Hill, Benjamin Mako and Maddox, Alexia and Lim, Woojin and South, Tobin and Juels, Ari and Boneh, Dan},
	urldate = {2023-11-14},
	date = {2023-10-29},
	keywords = {{ComSoc}::Citable, Computer Science - Computers and Society, ⛔ No {INSPIRE} recid found},
}

@article{paszke_pytorch_2019,
	title = {{PyTorch}: An Imperative Style, High-Performance Deep Learning Library},
	url = {http://arxiv.org/abs/1912.01703},
	doi = {10.48550/arXiv.1912.01703},
	shorttitle = {{PyTorch}},
	abstract = {Deep learning frameworks have often focused on either usability or speed, but not both. {PyTorch} is a machine learning library that shows that these two goals are in fact compatible: it provides an imperative and Pythonic programming style that supports code as a model, makes debugging easy and is consistent with other popular scientific computing libraries, while remaining efficient and supporting hardware accelerators such as {GPUs}. In this paper, we detail the principles that drove the implementation of {PyTorch} and how they are reflected in its architecture. We emphasize that every aspect of {PyTorch} is a regular Python program under the full control of its user. We also explain how the careful and pragmatic implementation of the key components of its runtime enables them to work together to achieve compelling performance. We demonstrate the efficiency of individual subsystems, as well as the overall speed of {PyTorch} on several common benchmarks.},
	author = {Paszke, Adam and Gross, Sam and Massa, Francisco and Lerer, Adam and Bradbury, James and Chanan, Gregory and Killeen, Trevor and Lin, Zeming and Gimelshein, Natalia and Antiga, Luca and Desmaison, Alban and Köpf, Andreas and Yang, Edward and {DeVito}, Zach and Raison, Martin and Tejani, Alykhan and Chilamkurthy, Sasank and Steiner, Benoit and Fang, Lu and Bai, Junjie and Chintala, Soumith},
	urldate = {2024-03-04},
	date = {2019-12-03},
	eprinttype = {arxiv},
	eprint = {1912.01703 [cs, stat]},
	note = {222 citations ({INSPIRE} 2024/5/19)
221 citations w/o self ({INSPIRE} 2024/5/19)},
	keywords = {Computer Science - Machine Learning, Computer Science - Mathematical Software, Statistics - Machine Learning},
}

@software{raasveldt_duckdb_2023,
	title = {{DuckDB}},
	url = {https://github.com/duckdb/duckdb},
	abstract = {{DuckDB} is an in-process {SQL} {OLAP} Database Management System},
	version = {0.9.2},
	author = {Raasveldt, Mark and Muehleisen, Hannes},
	urldate = {2024-02-06},
	date = {2023},
	keywords = {⛔ No {INSPIRE} recid found},
}

@report{noauthor_anexo_2023,
	title = {Anexo I. {RESULTADOS} {DEL} {ETIQUETADO} {DE} {ELECTRICIDAD} {DE} {LAS} {EMPRESAS} {COMERCIALIZADORAS} {RELATIVOS} A {LA} {ENERGÍA} {PRODUCIDA} {EN} {EL} {AÑO} 2022},
	url = {https://gdo.cnmc.es/CNMC/accesoEtiquetado.do},
	number = {{GDO}/{DE}/001/23},
	institution = {Comisión Nacional de los Mercados y la Competencia},
	date = {2023},
	keywords = {⛔ No {INSPIRE} recid found},
}

@misc{tfm-dataset-text,
	title = {{DAOs} Census {TFM}},
	url = {https://www.kaggle.com/dsv/8413149},
	doi = {10.34740/kaggle/dsv/8413149},
	publisher = {Kaggle},
	author = {Schwartz, Andrew and Davó Laviña, David},
	urldate = {2024-01-19},
	date = {2023},
	keywords = {⛔ No {INSPIRE} recid found},
}

@online{dappradar_decentraland_2024,
	title = {Decentraland - Project Overview, Analytics, and Data},
	url = {https://dappradar.com/dapp/decentraland},
	abstract = {Explore Decentraland project with an overview of blockchain data, analytics, news, and more. Stay updated on the latest insights and trends on {DappRadar}.},
	titleaddon = {{DappRadar}},
	author = {{DappRadar}},
	urldate = {2024-04-04},
	date = {2024},
	langid = {english},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{chua_mvr-rcm_2024,
	location = {New York, {NY}, {USA}},
	title = {{MVR}-{RCM}: An Approach to Recommend Microlearning Videos in Informal Online Learning Environment},
	isbn = {979-8-4007-0911-1},
	url = {https://dl.acm.org/doi/10.1145/3629296.3629301},
	doi = {10.1145/3629296.3629301},
	series = {{ICETC} '23},
	shorttitle = {{MVR}-{RCM}},
	abstract = {With the rapid development of Web technologies, online learning has become mainstream. People acquire for new skills or knowledge through the Internet in formal or informal ways. As compared to the well-developed curriculum-based Learning Management Systems ({LMSs}), more people prefer the informal style-learning that can be customized to meet different learning habits or interests. They prefer engage with resources that are short or casual, but could give immediate solutions. In informal online learning, people acquire learning resources from open-source platforms. As the open-source learning resources grow, the searches become complex and nearly impossible to identify desired content if just have a glance at the learning resource title. This paper described the full architecture of “{MVR}-{RCM}” to help learners acquire microlearning video resources efficiently in an informal online learning environment. Instead of manually browsing through the Internet for learning resources, an automated approach named “{MVR}-{RCM}” has been proposed to deliver microlearning videos using a content-based recommender system. In “{MVR}-{RCM}”, key influence factors like learning interest and video's category are adopted to suggest relevant microlearning video resources to learners.},
	pages = {27--32},
	booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
	publisher = {Association for Computing Machinery},
	author = {Chua, Fang-Fang and Chong, Shin-Yan and Lim, Tek-Yong},
	urldate = {2024-02-01},
	date = {2024},
	keywords = {Ignorebib, ⛔ No {INSPIRE} recid found},
}

@misc{tfm-ray-results,
	title = {Ray results of «Exploración de Sistemas Recomendadores para la Recomendación de Propuestas en Organizaciones Autónomas Decentralizadas»},
	url = {https://zenodo.org/doi/10.5281/zenodo.11072578},
	doi = {10.5281/zenodo.11072578},
	author = {Davó, David},
	urldate = {2024-05-15},
	date = {2024-04-26},
	keywords = {⛔ No {INSPIRE} recid found},
}

@unpublished{davo_enhancing_2024,
	title = {Enhancing Voter Engagement in Decentralized Governance: A Recommender System for {DAOs} using Graph Neural Networks},
	abstract = {Decentralized Autonomous Organizations ({DAOs}) represent a novel approach to collectively governing projects, facilitated by blockchain technology. {DAOs} foster democratic voting processes, allowing members to put forward and vote on proposals, thereby collectively shaping the organization’s future. However, the effectiveness and legitimacy of decision-making within {DAOs} can be compromised by low voter turnout, a challenge shared with traditional online communities and voting systems. Given the limited lifespan of each proposal, conventional recommender system techniques are unsuitable. In response to these issues, this paper introduces a recommender system specifically designed for {DAOs}. In particular, we introduce a novel approach that leverages Graph Neural Networks ({GNN}) for collaborative filtering, effectively exploiting the member-proposal bipartite graph inherent in {DAOs} voting and taking into account the temporal constraints of voting. We compare our approach with a baseline that recommends the most popular open proposals at the time of recommendation. We validate our approach in the Decentraland {DAO}, which is a {DAO} that collectively governs a metaverse platform with over 35,000 members and 2,000 proposals voted. Our {GNN}-based model accurately predicts future voters, surpassing the proposed baseline. The results not only underscore the potential of recommender systems in enhancing voter participation within {DAOs} but also align with the observed improvements in user engagement in other online collaborative projects that have implemented similar systems. Furthermore, our {GNN}-based recommendation systems with temporal constraints could be adapted to other settings such as event recommendation.},
	pagetotal = {8},
	type = {Submitted},
	howpublished = {Submitted},
	author = {Davó, David and Arroyo, Javier},
	date = {2024},
	keywords = {⛔ No {INSPIRE} recid found},
}

@unpublished{davo_features_2024,
	title = {Features and Challenges of Decentralized Autonomous Organizations: The Case of {DAOstack}},
	abstract = {In a few years, Decentralized Autonomous Organizations ({DAOs}) have evolved from a theoretical concept to
a reality, managing billions of dollars in cryptoassets. The
software platforms that make it possible to operate a {DAO} in the
blockchain facilitated this transition and helped to give them a
concrete form: a cryptoasset treasury managed through a voting
system based on proposals. This article focuses on {DAOstack}, a
pioneering but now-defunct {DAO} platform. It explores the milestones of {DAOstack}’s trajectory, the main quantitative features
of the communities it hosted, and the effectiveness of its voting
system. The insights provided go beyond the {DAOstack} and help
to understand some of the challenges they face in realizing their
potential.},
	pagetotal = {6},
	author = {Davó, David and Arroyo, Javier and Hassan, Samer},
	date = {2024},
	keywords = {Ignorebib, ⛔ No {INSPIRE} recid found},
}

@misc{reimers_sentence-bert_2019,
	title = {Sentence-{BERT}: Sentence Embeddings using Siamese {BERT}-Networks},
	url = {http://arxiv.org/abs/1908.10084},
	doi = {10.48550/arXiv.1908.10084},
	shorttitle = {Sentence-{BERT}},
	abstract = {{BERT} (Devlin et al., 2018) and {RoBERTa} (Liu et al., 2019) has set a new state-of-the-art performance on sentence-pair regression tasks like semantic textual similarity ({STS}). However, it requires that both sentences are fed into the network, which causes a massive computational overhead: Finding the most similar pair in a collection of 10,000 sentences requires about 50 million inference computations ({\textasciitilde}65 hours) with {BERT}. The construction of {BERT} makes it unsuitable for semantic similarity search as well as for unsupervised tasks like clustering. In this publication, we present Sentence-{BERT} ({SBERT}), a modification of the pretrained {BERT} network that use siamese and triplet network structures to derive semantically meaningful sentence embeddings that can be compared using cosine-similarity. This reduces the effort for finding the most similar pair from 65 hours with {BERT} / {RoBERTa} to about 5 seconds with {SBERT}, while maintaining the accuracy from {BERT}. We evaluate {SBERT} and {SRoBERTa} on common {STS} tasks and transfer learning tasks, where it outperforms other state-of-the-art sentence embeddings methods.},
	number = {{arXiv}:1908.10084},
	publisher = {{arXiv}},
	author = {Reimers, Nils and Gurevych, Iryna},
	urldate = {2024-02-08},
	date = {2019-08-27},
	eprinttype = {arxiv},
	eprint = {1908.10084 [cs]},
	keywords = {Computer Science - Computation and Language, ⛔ No {INSPIRE} recid found},
}

@software{davo_daviddavoupm-tfm-notebooks_2024,
	title = {daviddavo/upm-tfm-notebooks: Notebooks to explore the creation of a {RecSys} for {DAOs}},
	url = {https://github.com/daviddavo/upm-tfm-notebooks},
	shorttitle = {daviddavo/upm-tfm-notebooks},
	abstract = {Notebooks for the {TFM}. Contribute to daviddavo/upm-tfm-notebooks development by creating an account on {GitHub}.},
	author = {Davó, David},
	urldate = {2024-02-01},
	date = {2024},
	keywords = {⛔ No {INSPIRE} recid found},
}

@online{decentraland_decentraland_2024,
	title = {Decentraland Places Overview},
	url = {https://decentraland.org/places/},
	abstract = {Decentraland is a virtual social platform built and governed by its users. Every day, users enter the world to meet up, play games, attend live events, trade in the marketplace, engage with brands, visit galleries and much more},
	author = {{Decentraland}},
	urldate = {2024-02-15},
	date = {2024},
	keywords = {⛔ No {INSPIRE} recid found},
}

@misc{dupont_new_2024,
	title = {New Online Communities: Graph Deep Learning on Anonymous Voting Networks to Identify Sybils in Polycentric Governance},
	url = {http://arxiv.org/abs/2311.17929},
	shorttitle = {New Online Communities},
	abstract = {This research examines the polycentric governance of digital assets in blockchain-based Decentralized Autonomous Organizations ({DAOs}). It offers a theoretical framework and addresses a critical challenge facing decentralized governance by developing a method to identify sybils, or spurious identities. Sybils pose significant organizational sustainability threats to {DAOs} and other, commons-based online communities, and threat models are identified. The experimental method uses graph deep learning techniques to identify sybil activity in a {DAO} governance dataset (snapshot.org). Specifically, a Graph Convolutional Neural Network ({GCNN}) learned voting behaviours and a fast k-means vector clustering algorithm ({FAISS}) used high-dimensional embeddings to identify similar nodes in a graph. The results reveal that deep learning can effectively identify sybils, reducing the voting graph by 2-5\%. This research underscores the importance of sybil resistance in {DAOs} and offers a novel perspective on decentralized governance, informing future policy, regulation, and governance practices.},
	number = {{arXiv}:2311.17929},
	publisher = {{arXiv}},
	author = {{DuPont}, Quinn},
	urldate = {2024-02-10},
	date = {2024-02-02},
	keywords = {68T07, Computer Science - Machine Learning, Electrical Engineering and Systems Science - Systems and Control, H.1.1, I.6.5, K.4.3, {TFM}::{SOTA}::{TODO}, ⛔ No {INSPIRE} recid found},
}

@misc{rendle_difficulty_2019,
	title = {On the Difficulty of Evaluating Baselines: A Study on Recommender Systems},
	url = {http://arxiv.org/abs/1905.01395},
	doi = {10.48550/arXiv.1905.01395},
	shorttitle = {On the Difficulty of Evaluating Baselines},
	abstract = {Numerical evaluations with comparisons to baselines play a central role when judging research in recommender systems. In this paper, we show that running baselines properly is difficult. We demonstrate this issue on two extensively studied datasets. First, we show that results for baselines that have been used in numerous publications over the past five years for the Movielens 10M benchmark are suboptimal. With a careful setup of a vanilla matrix factorization baseline, we are not only able to improve upon the reported results for this baseline but even outperform the reported results of any newly proposed method. Secondly, we recap the tremendous effort that was required by the community to obtain high quality results for simple methods on the Netflix Prize. Our results indicate that empirical findings in research papers are questionable unless they were obtained on standardized benchmarks where baselines have been tuned extensively by the research community.},
	number = {{arXiv}:1905.01395},
	publisher = {{arXiv}},
	author = {Rendle, Steffen and Zhang, Li and Koren, Yehuda},
	urldate = {2023-10-25},
	date = {2019-05-03},
	keywords = {Computer Science - Information Retrieval, Computer Science - Machine Learning, ⛔ No {INSPIRE} recid found},
}

@misc{pena-calvin_census_2024,
	title = {Census of the Ecosystem of Decentralized Autonomous Organizations},
	rights = {Creative Commons Attribution 4.0 International},
	url = {https://zenodo.org/doi/10.5281/zenodo.10794915},
	doi = {10.5281/ZENODO.10794915},
	abstract = {The dataset includes data from various Decentralized Autonomous Organizations ({DAOs}) platforms, namely Aragon, {DAOHaus}, {DAOstack}, Realms, Snapshot and Tally. {DAOs} are a new form of self-governed online communities deployed in the blockchain. {DAO} members typically use governance tokens to participate in the {DAO} decision-making process, often through a voting system where members submit proposals and vote on them.

The description of the methods used for the generation of data, for processing it and the quality-assurance procedures performed on the data can be found here:https://doi.org/10.1145/3589335.3651481



Recommended citation for this dataset:Peña-Calvin, A., Arroyo, J., Schwartz, A., \& Hassan, S. (2024). Concentration of Power and Participation in Online Governance: the Ecosystem of Decentralized Autonomous Organizations. Companion Proceedings of the {ACM} Web Conference, 13–17, 2024, Singapore, doi: https://doi.org/10.1145/3589335.3651481


The dataset comprises three {CSV} files: deployments.csv, proposals.csv, and votes.csv, each containing essential information regarding {DAOs} deployments, theirproposals, and the corresponding votes.



The file deployments.csv provides insights into the general aspects of {DAO} deployments, including the platform it is deployed in, the number of proposals, unique voters, votes cast, and estimated voting power.

The proposals.csv file contains comprehensive information about all proposals associated with the deployments, including their date, the number of votes they received, and the total voting power voters employed on that proposal.

In votes.csv, data regarding the votes cast for the deployment proposals is recorded. It includes the voter's blockchain address, the vote's weight in voting power, and the day it was cast.},
	version = {1.0.0},
	publisher = {Zenodo},
	author = {Peña-Calvin, Andrea and Arroyo, Javier and Schwartz, Andrew and Hassan, Samer and Davó, David},
	urldate = {2024-04-11},
	date = {2024-03-11},
	langid = {english},
	keywords = {Blockchain, Decentralized Autonomous Organizations, Decentralized Web, Decentralized governance, Decision making, Online Communities, Online Governance, Proposals, Votes, Voting power, Web3, ⛔ No {INSPIRE} recid found},
}

@misc{li_pap-rec_2024,
	title = {{PAP}-{REC}: Personalized Automatic Prompt for Recommendation Language Model},
	url = {http://arxiv.org/abs/2402.00284},
	doi = {10.48550/arXiv.2402.00284},
	shorttitle = {{PAP}-{REC}},
	abstract = {Recently emerged prompt-based Recommendation Language Models ({RLM}) can solve multiple recommendation tasks uniformly. The {RLMs} make full use of the inherited knowledge learned from the abundant pre-training data to solve the downstream recommendation tasks by prompts, without introducing additional parameters or network training. However, handcrafted prompts require significant expertise and human effort since slightly rewriting prompts may cause massive performance changes. In this paper, we propose {PAP}-{REC}, a framework to generate the Personalized Automatic Prompt for {RECommendation} language models to mitigate the inefficiency and ineffectiveness problems derived from manually designed prompts. Specifically, personalized automatic prompts allow different users to have different prompt tokens for the same task, automatically generated using a gradient-based method. One challenge for personalized automatic prompt generation for recommendation language models is the extremely large search space, leading to a long convergence time. To effectively and efficiently address the problem, we develop surrogate metrics and leverage an alternative updating schedule for prompting recommendation language models. Experimental results show that our {PAP}-{REC} framework manages to generate personalized prompts, and the automatically generated prompts outperform manually constructed prompts and also outperform various baseline recommendation models. The source code of the work is available at https://github.com/rutgerswiselab/{PAP}-{REC}.},
	number = {{arXiv}:2402.00284},
	publisher = {{arXiv}},
	author = {Li, Zelong and Ji, Jianchao and Ge, Yingqiang and Hua, Wenyue and Zhang, Yongfeng},
	urldate = {2024-02-13},
	date = {2024-01-31},
	eprinttype = {arxiv},
	eprint = {2402.00284 [cs]},
	note = {version: 1},
	keywords = {Computer Science - Artificial Intelligence, Computer Science - Information Retrieval, Computer Science - Machine Learning, ⛔ No {INSPIRE} recid found},
}

@online{deepdao_ventures_ltd_deepdao_2023,
	title = {{DeepDAO}},
	url = {https://deepdao.io},
	abstract = {Discovery, listing and analytics for all {DAOs}},
	titleaddon = {{DeepDAO} - Discovery Engine for the {DAO} Ecosystem},
	author = {{DeepDAO Ventures Ltd.}},
	urldate = {2023-12-20},
	date = {2023},
	langid = {english},
	keywords = {⛔ No {INSPIRE} recid found},
}

@article{ressi_ai-enhanced_2024,
	title = {{AI}-enhanced blockchain technology: A review of advancements and opportunities},
	issn = {1084-8045},
	url = {https://www.sciencedirect.com/science/article/pii/S1084804524000353},
	doi = {10.1016/j.jnca.2024.103858},
	shorttitle = {{AI}-enhanced blockchain technology},
	abstract = {Blockchain technology has rapidly gained popularity, permeating various fields due to its inherent features of security, transparency, and decentralization. Blockchain-based applications, spanning from financial transactions to supply chain management, have revolutionized numerous industries. Concurrently, Artificial Intelligence ({AI}) techniques have emerged as a powerful tool for efficiently solving complex problems. The integration of {AI} into blockchain applications has shown promise in addressing key challenges such as security, consensus, scalability, and interoperability. While existing literature offers several surveys on the intersection of {AI} and blockchain, our work takes a distinct perspective by focusing on how {AI} solutions can enhance and optimize blockchain technology and its applications. Our goal is to provide a comprehensive literature overview of the methods that have been employed to improve blockchain technology through {AI}, encompassing machine learning, deep learning, natural language processing and reinforcement learning. Our contribution highlights {AI}’s potential to enhance blockchain, improving efficiency, security, and reliability of blockchain-based applications. By exploring {AI}’s role in consensus, smart contracts, and data privacy, it advances theory and practical applications, fostering innovation across sectors for a more secure and efficient digital future.},
	pages = {103858},
	journaltitle = {Journal of Network and Computer Applications},
	shortjournal = {Journal of Network and Computer Applications},
	author = {Ressi, Dalila and Romanello, Riccardo and Piazza, Carla and Rossi, Sabina},
	urldate = {2024-03-04},
	date = {2024-03-01},
	keywords = {Artificial intelligence, Blockchain, Machine learning, {TFM}::{SOTA}::{TODO}, ⛔ No {INSPIRE} recid found},
}

@unpublished{aviv_all_2023,
	title = {All the ways we have fucked up governance, and how to rethink it from first principles with Eylon},
	url = {https://www.youtube.com/watch?v=6sBMNm2FHeA},
	abstract = {Mostly practical lessons from {DAO} and governance failures, discovered through an interactive discussion with the audience. The goal is to break down issues from first principles to understand where we went wrong, so we can think on how to rebuild them better in this bear market.

https://twitter.com/theeylon
Eylon Aviv
Investor / Bizdev
Collider, {DXdao}
A creative self-starter with global success in investing, planning, and executing complex systems and widely successful products. Web3 journey began with the {DAO} hack, which I still consider to be the most exciting primitive in the space. Currently investing through Collider, leading Bizdev for {DXdao}, and advising several startups in the space.},
	author = {Aviv, Eylon},
	urldate = {2023-06-12},
	date = {2023-03-05},
}

%------- START OF 100-200

@inproceedings{valiente_integration_2022,
	location = {Cham},
	title = {Integration of Ontologies with Decentralized Autonomous Organizations Development: A Systematic Literature Review},
	isbn = {978-3-030-98876-0},
	doi = {10.1007/978-3-030-98876-0_15},
	shorttitle = {Integration of Ontologies with Decentralized Autonomous Organizations Development},
	abstract = {This paper presents a systematic literature review of the integration of ontologies into the Decentralized Autonomous Organization ({DAO}) development process. The review extracted data from 34 primary studies dealing with ontologies in the blockchain domain. {DAO} has become a key concept for the development of blockchain-based decentralized software systems. {DAOs} are seen as a positive alternative for organizations interested in the adoption of decentralized, reliable and transparent governance, as well as attracting the interest of academic research. However, there is no common understanding or generally accepted formal definition of a {DAO}, and the guidelines that provide support for the adoption and development of {DAOs} are limited to a few key references that lack the computational semantics needed to enable their automated validation, simulation or execution. Thus, the objective of this paper is to provide an unbiased and up-to-date review related to the integration of ontologies within {DAOs} which helps to identify new research opportunities and take advantage of this integration from a blockchain-based decentralized perspective.},
	pages = {171--184},
	booktitle = {Metadata and Semantic Research},
	publisher = {Springer International Publishing},
	author = {Valiente, María-Cruz and Rozas, David},
	editor = {Garoufallou, Emmanouel and Ovalle-Perandones, María-Antonia and Vlachidis, Andreas},
	date = {2022},
	langid = {english},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{azzopardi_local_2019,
	location = {Cham},
	title = {Local Popularity and Time in top-N Recommendation},
	volume = {11437},
	isbn = {978-3-030-15711-1},
	url = {http://link.springer.com/10.1007/978-3-030-15712-8_63},
	doi = {10.1007/978-3-030-15712-8_63},
	series = {Lecture Notes in Computer Science},
	eventtitle = {European Conference on Information Retrieval},
	pages = {861--868},
	booktitle = {Advances in Information Retrieval},
	publisher = {Springer International Publishing},
	author = {Anelli, Vito Walter and Di Noia, Tommaso and Di Sciascio, Eugenio and Ragone, Azzurra and Trotta, Joseph},
	editor = {Azzopardi, Leif and Stein, Benno and Fuhr, Norbert and Mayr, Philipp and Hauff, Claudia and Hiemstra, Djoerd},
	urldate = {2024-02-25},
	date = {2019-04-07},
	langid = {english},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{ying_graph_2018,
	location = {New York, {NY}, {USA}},
	title = {Graph Convolutional Neural Networks for Web-Scale Recommender Systems},
	isbn = {978-1-4503-5552-0},
	url = {https://dl.acm.org/doi/10.1145/3219819.3219890},
	doi = {10.1145/3219819.3219890},
	series = {{KDD} '18},
	abstract = {Recent advancements in deep neural networks for graph-structured data have led to state-of-the-art performance on recommender system benchmarks. However, making these methods practical and scalable to web-scale recommendation tasks with billions of items and hundreds of millions of users remains an unsolved challenge. Here we describe a large-scale deep recommendation engine that we developed and deployed at Pinterest. We develop a data-efficient Graph Convolutional Network ({GCN}) algorithm, which combines efficient random walks and graph convolutions to generate embeddings of nodes (i.e., items) that incorporate both graph structure as well as node feature information. Compared to prior {GCN} approaches, we develop a novel method based on highly efficient random walks to structure the convolutions and design a novel training strategy that relies on harder-and-harder training examples to improve robustness and convergence of the model. We also develop an efficient {MapReduce} model inference algorithm to generate embeddings using a trained model. Overall, we can train on and embed graphs that are four orders of magnitude larger than typical {GCN} implementations. We show how {GCN} embeddings can be used to make high-quality recommendations in various settings at Pinterest, which has a massive underlying graph with 3 billion nodes representing pins and boards, and 17 billion edges. According to offline metrics, user studies, as well as A/B tests, our approach generates higher-quality recommendations than comparable deep learning based systems. To our knowledge, this is by far the largest application of deep graph embeddings to date and paves the way for a new generation of web-scale recommender systems based on graph convolutional architectures.},
	pages = {974--983},
	booktitle = {Proceedings of the 24th {ACM} {SIGKDD} International Conference on Knowledge Discovery \& Data Mining},
	publisher = {Association for Computing Machinery},
	author = {Ying, Rex and He, Ruining and Chen, Kaifeng and Eksombatchai, Pong and Hamilton, William L. and Leskovec, Jure},
	urldate = {2023-07-13},
	date = {2018-07-19},
	note = {1710 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, deep learning, graph convolutional networks, recommender systems, scalability, ⛔ No {INSPIRE} recid found},
}

@article{wu_graph_2022,
	title = {Graph Neural Networks in Recommender Systems: A Survey},
	volume = {55},
	issn = {0360-0300},
	url = {https://dl.acm.org/doi/10.1145/3535101},
	doi = {10.1145/3535101},
	shorttitle = {Graph Neural Networks in Recommender Systems},
	abstract = {With the explosive growth of online information, recommender systems play a key role to alleviate such information overload. Due to the important application value of recommender systems, there have always been emerging works in this field. In recommender systems, the main challenge is to learn the effective user/item representations from their interactions and side information (if any). Recently, graph neural network ({GNN}) techniques have been widely utilized in recommender systems since most of the information in recommender systems essentially has graph structure and {GNN} has superiority in graph representation learning. This article aims to provide a comprehensive review of recent research efforts on {GNN}-based recommender systems. Specifically, we provide a taxonomy of {GNN}-based recommendation models according to the types of information used and recommendation tasks. Moreover, we systematically analyze the challenges of applying {GNN} on different types of data and discuss how existing works in this field address these challenges. Furthermore, we state new perspectives pertaining to the development of this field. We collect the representative papers along with their open-source implementations in https://github.com/wusw14/{GNN}-in-{RS}.},
	pages = {97:1--97:37},
	number = {5},
	journaltitle = {{ACM} Computing Surveys},
	shortjournal = {{ACM} Comput. Surv.},
	author = {Wu, Shiwen and Sun, Fei and Zhang, Wentao and Xie, Xu and Cui, Bin},
	urldate = {2024-05-16},
	date = {2022},
	note = {239 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, Recommender system, graph neural network, survey, ⛔ No {INSPIRE} recid found},
}

@article{pena-calvin_categorization_2023,
	title = {A Categorization of Decentralized Autonomous Organizations: The Case of the Aragon Platform},
	issn = {2329-924X},
	url = {https://ieeexplore.ieee.org/abstract/document/10217072},
	doi = {10.1109/TCSS.2023.3299254},
	shorttitle = {A Categorization of Decentralized Autonomous Organizations},
	abstract = {The advent of blockchain technology has paved the way for numerous innovations in online governance, with decentralized autonomous organizations ({DAOs}) emerging as a prominent development, often referred to as “digital jurisdictions.” Despite experiencing remarkable growth, currently boasting nearly 7M users and 18 billion in assets, {DAOs} remain relatively underexplored in the existing literature, particularly from an empirical perspective. This study presents a comprehensive framework comprising 15 dimensions to categorize {DAOs} based on their operational domain, purpose, scope, voting process, and utilization of crypto-tokens. By applying this categorization schema to 40 {DAO} communities hosted on the Aragon platform, encompassing over 423 000 participants and managing treasuries worth 960M, we shed light on the prevailing characteristics of these {DAOs}. Contrary to assertions made by blockchain enthusiasts, our analysis reveals that {DAOs} predominantly operate in financial and technological domains, primarily offering blockchain-based services. Additionally, our investigation into their governance structure exposes limitations in terms of democratic participation, as decision-making power typically correlates with the number of tokens owned by the voter, resembling plutocracies rather than true democracies. We believe these findings will facilitate researchers’ comprehension of this innovative form of governance and aid practitioners in designing future {DAOs} with greater effectiveness. Furthermore, our analysis can be replicated on other platforms or at different time periods to validate and contrast our conclusions.},
	pages = {1--0},
	journaltitle = {{IEEE} Transactions on Computational Social Systems},
	author = {Peña-Calvin, Andrea and Saldivar, Jorge and Arroyo, Javier and Hassan, Samer},
	urldate = {2024-01-30},
	date = {2023},
	keywords = {Aragon, Blockchains, Costs, Cryptocurrency, Decentralized autonomous organization, Proposals, Social networking (online), Technological innovation, archetypes, blockchain, cryptocurrencies, decentralized autonomous organizations ({DAOs}), governance, online communities, tokens, voting system, web3, ⛔ No {INSPIRE} recid found},
}

@article{benkeser_online_2018,
	title = {Online cross-validation-based ensemble learning},
	volume = {37},
	issn = {1097-0258},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/sim.7320},
	doi = {10.1002/sim.7320},
	abstract = {Online estimators update a current estimate with a new incoming batch of data without having to revisit past data thereby providing streaming estimates that are scalable to big data. We develop flexible, ensemble-based online estimators of an infinite-dimensional target parameter, such as a regression function, in the setting where data are generated sequentially by a common conditional data distribution given summary measures of the past. This setting encompasses a wide range of time-series models and, as special case, models for independent and identically distributed data. Our estimator considers a large library of candidate online estimators and uses online cross-validation to identify the algorithm with the best performance. We show that by basing estimates on the cross-validation-selected algorithm, we are asymptotically guaranteed to perform as well as the true, unknown best-performing algorithm. We provide extensions of this approach including online estimation of the optimal ensemble of candidate online estimators. We illustrate excellent performance of our methods using simulations and a real data example where we make streaming predictions of infectious disease incidence using data from a large database. Copyright © 2017 John Wiley \& Sons, Ltd.},
	pages = {249--260},
	number = {2},
	journaltitle = {Statistics in Medicine},
	author = {Benkeser, David and Ju, Cheng and Lendle, Sam and van der Laan, Mark},
	urldate = {2024-03-21},
	date = {2018},
	langid = {english},
	note = {28 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, cross-validation, dependent data ensemble learning, machine learning, online estimation, stochastic gradient descent, time-series, ⛔ No {INSPIRE} recid found},
}

@inproceedings{makhneva_make_2023,
	location = {New York, {NY}, {USA}},
	title = {Make your next item recommendation model time sensitive},
	isbn = {978-1-4503-9891-6},
	url = {https://dl.acm.org/doi/10.1145/3563359.3596980},
	doi = {10.1145/3563359.3596980},
	series = {{UMAP} '23 Adjunct},
	abstract = {Recommender systems have become increasingly popular for providing personalized recommendations to users. Recent studies have shown that transformer-based approaches can enhance the performance of these systems. However, these models usually consider the sequence of past user interactions and do not take into account the time of prediction. In this paper, we address this issue by proposing a simple yet effective method in the form of adapter to make next-item recommenders time-aware. Specifically, we introduce a novel approach that incorporates time information into the modeling process. We conduct extensive experiments on two commonly used sequential recommenders, {GRU}4Rec and {TiSASRec}, using four real-world datasets. Our results demonstrate that our approach increases the quality of existing methods and improves the accuracy of recommendations. Our approach is easy to implement and can be applied to a wide range of next-item recommendation systems. It provides a structured framework for incorporating time information into the modeling process, making it easier for researchers to replicate and build upon our findings. Overall, our work contributes to the development of more accurate and efficient recommendation systems, with potential applications in various domains such as e-commerce, social media, and online content delivery. Code is available at {GitHub} repo1.},
	pages = {191--195},
	booktitle = {Adjunct Proceedings of the 31st {ACM} Conference on User Modeling, Adaptation and Personalization},
	publisher = {Association for Computing Machinery},
	author = {Makhneva, Elizaveta and Sverkunova, Anna and Lashinin, Oleg and Ananyeva, Marina and Kolesnikov, Sergey},
	urldate = {2023-09-04},
	date = {2023-06-16},
	note = {1 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, neural networks, next-item recommendations, offline evaluation, time-aware, ⛔ No {INSPIRE} recid found},
}

@inproceedings{wang_make_2020,
	location = {New York, {NY}, {USA}},
	title = {Make It a Chorus: Knowledge- and Time-aware Item Modeling for Sequential Recommendation},
	isbn = {978-1-4503-8016-4},
	url = {https://doi.org/10.1145/3397271.3401131},
	doi = {10.1145/3397271.3401131},
	series = {{SIGIR} '20},
	shorttitle = {Make It a Chorus},
	abstract = {Traditional recommender systems mainly aim to model inherent and long-term user preference, while dynamic user demands are also of great importance. Typically, a historical consumption will have impacts on the user demands for its relational items. For instance, users tend to buy complementary items together ({iPhone} and Airpods) but not substitutive items (Powerbeats and Airpods), although substitutes of the bought one still cater to his/her preference. To better model the effects of history sequence, previous studies introduce the semantics of item relations to capture user demands for recommendation. However, we argue that the temporal evolution of the effects caused by different relations cannot be neglected. In the example above, user demands for headphones can be promoted after a long period when a new one is needed. To model dynamic meanings of an item in different sequence contexts, a novel method Chorus is proposed to take both item relations and corresponding temporal dynamics into consideration. Chorus aims to derive the embedding of target item in a knowledge-aware and time-aware way, where each item will get its basic representation and relation-related ones. Then, we devise temporal kernel functions to combine these representations dynamically, according to whether there are relational items in history sequence as well as the elapsed time. The enhanced target item embedding is flexible to work with various algorithms to calculate the ranking score and generate recommendations. According to extensive experiments in three real-world datasets, Chorus gains significant improvements compared to state-of-the-art baseline methods. Furthermore, the time-related parameters are highly interpretable and hence can strengthen the explainability of recommendation.},
	pages = {109--118},
	booktitle = {Proceedings of the 43rd International {ACM} {SIGIR} Conference on Research and Development in Information Retrieval},
	publisher = {Association for Computing Machinery},
	author = {Wang, Chenyang and Zhang, Min and Ma, Weizhi and Liu, Yiqun and Ma, Shaoping},
	urldate = {2023-09-05},
	date = {2020-07-25},
	note = {83 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, item relations, knowledge-aware recommendation, recommender system, temporal dynamics, ⛔ No {INSPIRE} recid found},
}

@inproceedings{hu_collaborative_2008,
	title = {Collaborative Filtering for Implicit Feedback Datasets},
	url = {https://ieeexplore.ieee.org/document/4781121},
	doi = {10.1109/ICDM.2008.22},
	abstract = {A common task of recommender systems is to improve customer experience through personalized recommendations based on prior implicit feedback. These systems passively track different sorts of user behavior, such as purchase history, watching habits and browsing activity, in order to model user preferences. Unlike the much more extensively researched explicit feedback, we do not have any direct input from the users regarding their preferences. In particular, we lack substantial evidence on which products consumer dislike. In this work we identify unique properties of implicit feedback datasets. We propose treating the data as indication of positive and negative preference associated with vastly varying confidence levels. This leads to a factor model which is especially tailored for implicit feedback recommenders. We also suggest a scalable optimization procedure, which scales linearly with the data size. The algorithm is used successfully within a recommender system for television shows. It compares favorably with well tuned implementations of other known methods. In addition, we offer a novel way to give explanations to recommendations given by this factor model.},
	eventtitle = {2008 Eighth {IEEE} International Conference on Data Mining},
	pages = {263--272},
	booktitle = {2008 Eighth {IEEE} International Conference on Data Mining},
	author = {Hu, Yifan and Koren, Yehuda and Volinsky, Chris},
	urldate = {2023-10-23},
	date = {2008-12},
	note = {1746 citations ({CrossRef} 2024/5/19)
{ISSN}: 2374-8486},
	keywords = {Ignorebib, ⛔ No {INSPIRE} recid found},
}

@inproceedings{jawaheer_comparison_2010,
	location = {New York, {NY}, {USA}},
	title = {Comparison of implicit and explicit feedback from an online music recommendation service},
	isbn = {978-1-4503-0407-8},
	url = {https://dl.acm.org/doi/10.1145/1869446.1869453},
	doi = {10.1145/1869446.1869453},
	series = {{HetRec} '10},
	abstract = {Explicit and implicit feedback exhibits different characteristics of users' preferences with both pros and cons. However, a combination of these two types of feedback provides another paradigm for recommender systems ({RS}). Their combination in a user preference model presents a number of challenges but can also overcome the problems associated with each other. In order to build an effective {RS} on combination of both types of feedback, we need to have comparative data allowing an understanding of the computation of user preferences. In this paper, we provide an overview of the differentiating characteristics of explicit and implicit feedback using datasets mined from Last.fm, an online music station and recommender service. The datasets consisted of explicit positive feedback (by loving tracks) and implicit feedback which is inherently positive (the number of times a track is played). Rather than relying on just one type of feedback, we present techniques for extracting user preferences from both. In order to compare and contrast the performances of these techniques, we carried out experiments using the Taste recommender system engine and the Last.fm datasets. Our results show that implicit and explicit positive feedback complements each other, with similar performances despite their different characteristics.},
	pages = {47--51},
	booktitle = {Proceedings of the 1st International Workshop on Information Heterogeneity and Fusion in Recommender Systems},
	publisher = {Association for Computing Machinery},
	author = {Jawaheer, Gawesh and Szomszor, Martin and Kostkova, Patty},
	urldate = {2024-05-19},
	date = {2010-09-26},
	keywords = {combination of feedback, explicit feedback, implicit feedback, music recommendation, recommender system, taste recommender system, ⛔ No {INSPIRE} recid found},
}

@inproceedings{oard_implicit_1998,
	location = {University of Maryland, College Park, {MD} 20742},
	title = {Implicit Feedback for Recommender Systems},
	volume = {83},
	abstract = {Canimplicitfeedbacksubstitute for explicit ratings in recommendseyrstems?If so, wecouldavoidthe difficulties associatedwithgatheringexplicit ratings fromusers. How, then, can wecaptureuseful informationunobtrusively,and howmight weuse that information to makerecommendations? In this paperweidentify three types of implicit feedbackandsuggesttwostrategies for usingimplicit feedback to makerecommendations.},
	eventtitle = {{AAAI} workshop on recommender systems},
	pages = {81--83},
	booktitle = {Proceedings of the {AAAI} workshop on recommender systems},
	publisher = {College of Library and Information Service},
	author = {Oard, Douglas W and Kim, Jinmook},
	date = {1998},
	langid = {english},
	keywords = {⛔ No {INSPIRE} recid found},
}

@online{snapshot_snapshot_nodate,
	title = {Snapshot docs},
	url = {https://docs.snapshot.org/},
	titleaddon = {Welcome to Snapshot docs!},
	author = {{Snapshot}},
	urldate = {2024-02-01},
	langid = {english},
	keywords = {⛔ No {INSPIRE} recid found},
}

@article{tashman_out--sample_2000,
	title = {Out-of-sample tests of forecasting accuracy: an analysis and review},
	volume = {16},
	issn = {0169-2070},
	url = {https://www.sciencedirect.com/science/article/pii/S0169207000000650},
	doi = {10.1016/S0169-2070(00)00065-0},
	series = {The M3- Competition},
	shorttitle = {Out-of-sample tests of forecasting accuracy},
	abstract = {In evaluations of forecasting accuracy, including forecasting competitions, researchers have paid attention to the selection of time series and to the appropriateness of forecast-error measures. However, they have not formally analyzed choices in the implementation of out-of-sample tests, making it difficult to replicate and compare forecasting accuracy studies. In this paper, I (1) explain the structure of out-of-sample tests, (2) provide guidelines for implementing these tests, and (3) evaluate the adequacy of out-of-sample tests in forecasting software. The issues examined include series-splitting rules, fixed versus rolling origins, updating versus recalibration of model coefficients, fixed versus rolling windows, single versus multiple test periods, diversification through multiple time series, and design characteristics of forecasting competitions. For individual time series, the efficiency and reliability of out-of-sample tests can be improved by employing rolling-origin evaluations, recalibrating coefficients, and using multiple test periods. The results of forecasting competitions would be more generalizable if based upon precisely described groups of time series, in which the series are homogeneous within group and heterogeneous between groups. Few forecasting software programs adequately implement out-of-sample evaluations, especially general statistical packages and spreadsheet add-ins.},
	pages = {437--450},
	number = {4},
	journaltitle = {International Journal of Forecasting},
	shortjournal = {International Journal of Forecasting},
	author = {Tashman, Leonard J.},
	urldate = {2024-03-21},
	date = {2000-10-01},
	note = {512 citations ({CrossRef} 2024/5/19)},
	keywords = {Fit period, Fixed origin, Forecasting competitions, Out-of-sample, Recalibration, Rolling origin, Rolling window, Sliding simulation, Test period, Updating, ⛔ No {INSPIRE} recid found},
}

@inproceedings{mcnee_recommending_2002,
	location = {New York, {NY}, {USA}},
	title = {On the recommending of citations for research papers},
	isbn = {978-1-58113-560-2},
	url = {https://dl.acm.org/doi/10.1145/587078.587096},
	doi = {10.1145/587078.587096},
	series = {{CSCW} '02},
	abstract = {Collaborative filtering has proven to be valuable for recommending items in many different domains. In this paper, we explore the use of collaborative filtering to recommend research papers, using the citation web between papers to create the ratings matrix. Specifically, we tested the ability of collaborative filtering to recommend citations that would be suitable additional references for a target research paper. We investigated six algorithms for selecting citations, evaluating them through offline experiments against a database of over 186,000 research papers contained in {ResearchIndex}. We also performed an online experiment with over 120 users to gauge user opinion of the effectiveness of the algorithms and of the utility of such recommendations for common research tasks. We found large differences in the accuracy of the algorithms in the offline experiment, especially when balanced for coverage. In the online experiment, users felt they received quality recommendations, and were enthusiastic about the idea of receiving recommendations in this domain.},
	pages = {116--125},
	booktitle = {Proceedings of the 2002 {ACM} conference on Computer supported cooperative work},
	publisher = {Association for Computing Machinery},
	author = {{McNee}, Sean M. and Albert, Istvan and Cosley, Dan and Gopalkrishnan, Prateep and Lam, Shyong K. and Rashid, Al Mamunur and Konstan, Joseph A. and Riedl, John},
	urldate = {2024-02-01},
	date = {2002-11-16},
	note = {239 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, {ResearchIndex}, citation graphs, collaborative filtering, digital libraries, recommender systems, social networks, ⛔ No {INSPIRE} recid found},
}

@article{geys_explaining_2006,
	title = {Explaining voter turnout: A review of aggregate-level research},
	volume = {25},
	issn = {0261-3794},
	url = {https://www.sciencedirect.com/science/article/pii/S0261379405000910},
	doi = {10.1016/j.electstud.2005.09.002},
	shorttitle = {Explaining voter turnout},
	abstract = {The amount of scholarly attention directed at resolving the question why people turn out to cast a vote is vast. In a research field dominated by empirical studies – such as the one on voter turnout – an overview of where we stand and what we know is not superfluous. Therefore, the present paper reviews and assesses the empirical evidence brought forward through a meta-analysis of 83 aggregate-level studies. We thereby concentrate on the effect of socio-economic, political and institutional variables. The results argue for the introduction of a ‘core’ model of voter turnout – including, among other elements, population size and election closeness – that can be used as a starting point for extending our knowledge on why people vote.},
	pages = {637--663},
	number = {4},
	journaltitle = {Electoral Studies},
	shortjournal = {Electoral Studies},
	author = {Geys, Benny},
	urldate = {2024-03-10},
	date = {2006-12-01},
	note = {514 citations ({CrossRef} 2024/5/19)},
	keywords = {Elections, Meta-analysis, Voter turnout, ⛔ No {INSPIRE} recid found},
}

@inproceedings{cubranic_automatic_2004,
	location = {Banff, Alberta, Canada},
	title = {Automatic bug triage using text categorization},
	isbn = {1-891706-14-4},
	abstract = {Bug triage, deciding what to do with an incoming bug report, is taking up increasing amount of developer resources in large open-source projects. In this paper, we propose to apply machine learning techniques to assist in bug triage by using text categorization to predict the developer that should work on the bug based on the bug’s description. We demonstrate our approach on a collection of 15,859 bug reports from a large open-source project. Our evaluation shows that our prototype, using supervised Bayesian learning, can correctly predict 30\% of the report assignments to developers.},
	eventtitle = {Software Engineering and Knowledge Engineering},
	pages = {92--97},
	booktitle = {Proceedings of the Sixteenth International Conference on Software Engineering \& Knowledge Engineering},
	publisher = {Frank Maurer and Günther Ruhe},
	author = {Cubranic, Davor and Murphy, Gail C},
	date = {2004},
	langid = {english},
	keywords = {{TFM}::{SOTA}::{DONE}, ⛔ No {INSPIRE} recid found},
}

@online{funk_netflix_2006,
	title = {Netflix Update: Try This at Home},
	url = {https://sifter.org/~simon/journal/20061211.html},
	author = {Funk, Simon},
	urldate = {2024-05-16},
	date = {2006-12-11},
	keywords = {⛔ No {INSPIRE} recid found},
}

@article{herlocker_evaluating_2004,
	title = {Evaluating collaborative filtering recommender systems},
	volume = {22},
	issn = {1046-8188},
	url = {https://dl.acm.org/doi/10.1145/963770.963772},
	doi = {10.1145/963770.963772},
	abstract = {Recommender systems have been evaluated in many, often incomparable, ways. In this article, we review the key decisions in evaluating collaborative filtering recommender systems: the user tasks being evaluated, the types of analysis and datasets being used, the ways in which prediction quality is measured, the evaluation of prediction attributes other than quality, and the user-based evaluation of the system as a whole. In addition to reviewing the evaluation strategies used by prior researchers, we present empirical results from the analysis of various accuracy metrics on one content domain where all the tested metrics collapsed roughly into three equivalence classes. Metrics within each equivalency class were strongly correlated, while metrics from different equivalency classes were uncorrelated.},
	pages = {5--53},
	number = {1},
	journaltitle = {{ACM} Transactions on Information Systems},
	shortjournal = {{ACM} Trans. Inf. Syst.},
	author = {Herlocker, Jonathan L. and Konstan, Joseph A. and Terveen, Loren G. and Riedl, John T.},
	urldate = {2024-02-23},
	date = {2004},
	note = {3835 citations ({CrossRef} 2024/5/19)},
	keywords = {Collaborative filtering, evaluation, metrics, recommender systems, ⛔ No {INSPIRE} recid found},
}

@online{nielsen_participation_2006,
	title = {Participation Inequality: The 90-9-1 Rule for Social Features},
	url = {https://www.nngroup.com/articles/participation-inequality/},
	shorttitle = {Participation Inequality},
	abstract = {In most online communities, 90\% of users are lurkers who never contribute, 9\% of users contribute a little, and 1\% of users account for almost all the action.},
	titleaddon = {Nielsen Norman Group},
	author = {Nielsen, Jakob},
	urldate = {2024-03-11},
	date = {2006-10-08},
	langid = {english},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{cosley_suggestbot_2007,
	location = {New York, {NY}, {USA}},
	title = {{SuggestBot}: using intelligent task routing to help people find work in wikipedia},
	isbn = {978-1-59593-481-9},
	url = {https://dl.acm.org/doi/10.1145/1216295.1216309},
	doi = {10.1145/1216295.1216309},
	series = {{IUI} '07},
	shorttitle = {{SuggestBot}},
	abstract = {Member-maintained communities ask their users to perform tasks the community needs. From Slashdot, to {IMDb}, to Wikipedia, groups with diverse interests create community-maintained artifacts of lasting value ({CALV}) that support the group's main purpose and provide value to others. Said communities don't help members find work to do, or do so without regard to individual preferences, such as Slashdot assigning meta-moderation randomly. Yet social science theory suggests that reducing the cost and increasing the personal value of contribution would motivate members to participate more.We present {SuggestBot}, software that performs intelligent task routing (matching people with tasks) in Wikipedia. {SuggestBot} uses broadly applicable strategies of text analysis, collaborative filtering, and hyperlink following to recommend tasks. {SuggestBot}'s intelligent task routing increases the number of edits by roughly four times compared to suggesting random articles. Our contributions are: 1) demonstrating the value of intelligent task routing in a real deployment; 2) showing how to do intelligent task routing; and 3) sharing our experience of deploying a tool in Wikipedia, which offered both challenges and opportunities for research.},
	pages = {32--41},
	booktitle = {Proceedings of the 12th international conference on Intelligent user interfaces},
	publisher = {Association for Computing Machinery},
	author = {Cosley, Dan and Frankowski, Dan and Terveen, Loren and Riedl, John},
	urldate = {2024-01-31},
	date = {2007},
	note = {153 citations ({CrossRef} 2024/5/19)},
	keywords = {{TFM}::{SOTA}::{DONE}, Wikipedia, intelligent task routing, member-maintained communities, online communities, recommender systems, ⛔ No {INSPIRE} recid found},
}

@inproceedings{bird_latent_2008,
	location = {New York, {NY}, {USA}},
	title = {Latent social structure in open source projects},
	isbn = {978-1-59593-995-1},
	url = {https://dl.acm.org/doi/10.1145/1453101.1453107},
	doi = {10.1145/1453101.1453107},
	series = {{SIGSOFT} '08/{FSE}-16},
	abstract = {Commercial software project managers design project organizational structure carefully, mindful of available skills, division of labour, geographical boundaries, etc. These organizational "cathedrals" are to be contrasted with the "bazaar-like" nature of Open Source Software ({OSS}) Projects, which have no pre-designed organizational structure. Any structure that exists is dynamic, self-organizing, latent, and usually not explicitly stated. Still, in large, complex, successful, {OSS} projects, we do expect that subcommunities will form spontaneously within the developer teams. Studying these subcommunities, and their behavior can shed light on how successful {OSS} projects self-organize. This phenomenon could well hold important lessons for how commercial software teams might be organized. Building on known well-established techniques for detecting community structure in complex networks, we extract and study latent subcommunities from the email social network of several projects: Apache {HTTPD}, Python, {PostgresSQL}, Perl, and Apache {ANT}. We then validate them with software development activity history. Our results show that subcommunities do indeed spontaneously arise within these projects as the projects evolve. These subcommunities manifest most strongly in technical discussions, and are significantly connected with collaboration behaviour.},
	pages = {24--35},
	booktitle = {Proceedings of the 16th {ACM} {SIGSOFT} International Symposium on Foundations of software engineering},
	publisher = {Association for Computing Machinery},
	author = {Bird, Christian and Pattison, David and D'Souza, Raissa and Filkov, Vladimir and Devanbu, Premkumar},
	urldate = {2024-02-01},
	date = {2008-11-09},
	note = {182 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, {TFM}::{SOTA}::Descartado, collaboration, open source software, social networks, ⛔ No {INSPIRE} recid found},
}

@inproceedings{hu_question_2008,
	location = {Suwon Korea},
	title = {Question recommendation for user-interactive question answering systems},
	isbn = {978-1-59593-993-7},
	url = {https://dl.acm.org/doi/10.1145/1352793.1352803},
	doi = {10.1145/1352793.1352803},
	eventtitle = {{ICUIMC}08: The Second International Conference on Ubiquitous Information Management and Communication},
	pages = {39--44},
	booktitle = {Proceedings of the 2nd international conference on Ubiquitous information management and communication},
	publisher = {{ACM}},
	author = {Hu, Dawei and Gu, Shenhua and Wang, Shitong and Wenyin, Liu and Chen, Enhong},
	urldate = {2024-02-01},
	date = {2008-01-31},
	langid = {english},
	note = {8 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, load balancing, question answering ({QA}), question recommendation, ⛔ No {INSPIRE} recid found},
}

@incollection{manning_chapter_2008,
	location = {New York},
	title = {Chapter 8. Evaluation in information retrieval},
	isbn = {978-0-521-86571-5},
	pages = {151--175},
	booktitle = {Introduction to information retrieval},
	publisher = {Cambridge University Press},
	author = {Manning, Christopher D. and Raghavan, Prabhakar and Schütze, Hinrich},
	date = {2008},
	note = {{OCLC}: ocn190786122},
	keywords = {Document clustering, Information retrieval, Semantic Web, Text processing (Computer science), ⛔ No {INSPIRE} recid found},
}

@inproceedings{castro-herrera_recommender_2009,
	location = {New York New York {USA}},
	title = {A recommender system for dynamically evolving online forums},
	isbn = {978-1-60558-435-5},
	url = {https://dl.acm.org/doi/10.1145/1639714.1639751},
	doi = {10.1145/1639714.1639751},
	eventtitle = {{RecSys} '09: Third {ACM} Conference on Recommender Systems},
	pages = {213--216},
	booktitle = {Proceedings of the third {ACM} conference on Recommender systems},
	publisher = {{ACM}},
	author = {Castro-Herrera, Carlos and Cleland-Huang, Jane and Mobasher, Bamshad},
	urldate = {2024-01-31},
	date = {2009-10-23},
	langid = {english},
	note = {12 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, {TFM}::{SOTA}::{DONE}, ⛔ No {INSPIRE} recid found},
}

@inproceedings{castro-herrera_recommender_2009-1,
	location = {Honolulu Hawaii},
	title = {A recommender system for requirements elicitation in large-scale software projects},
	isbn = {978-1-60558-166-8},
	url = {https://dl.acm.org/doi/10.1145/1529282.1529601},
	doi = {10.1145/1529282.1529601},
	eventtitle = {{SAC}09: The 2009 {ACM} Symposium on Applied Computing},
	pages = {1419--1426},
	booktitle = {Proceedings of the 2009 {ACM} symposium on Applied Computing},
	publisher = {{ACM}},
	author = {Castro-Herrera, Carlos and Duan, Chuan and Cleland-Huang, Jane and Mobasher, Bamshad},
	urldate = {2024-01-31},
	date = {2009-03-08},
	langid = {english},
	note = {47 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, {TFM}::{SOTA}::{DONE}, ⛔ No {INSPIRE} recid found},
}

@article{koren_matrix_2009,
	title = {Matrix Factorization Techniques for Recommender Systems},
	volume = {42},
	issn = {1558-0814},
	url = {https://ieeexplore.ieee.org/document/5197422},
	doi = {10.1109/MC.2009.263},
	abstract = {As the Netflix Prize competition has demonstrated, matrix factorization models are superior to classic nearest neighbor techniques for producing product recommendations, allowing the incorporation of additional information such as implicit feedback, temporal effects, and confidence levels.},
	pages = {30--37},
	number = {8},
	journaltitle = {Computer},
	author = {Koren, Yehuda and Bell, Robert and Volinsky, Chris},
	urldate = {2024-05-15},
	date = {2009-08},
	note = {7038 citations ({CrossRef} 2024/5/19)
Conference Name: Computer},
	keywords = {Bioinformatics, Collaboration, Computational intelligence, Filtering, Genomics, Matrix factorization, Motion pictures, Nearest neighbor searches, Netflix Prize, Predictive models, Recommender systems, Sea measurements, ⛔ No {INSPIRE} recid found},
}

@software{caraciolo_crab_2010,
	location = {Austin, Texas},
	title = {Crab: A Recommendation Engine Framework for Python},
	url = {https://github.com/muricoca/crab},
	author = {Caraciolo, Marcel and Melo, Bruno and Caspirro, Ricardo and Alves, Rodrigo},
	date = {2010},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{castro-herrera_hybrid_2010,
	title = {A hybrid recommender system for finding relevant users in open source forums},
	doi = {10.1109/MARK.2010.5623811},
	abstract = {Open source projects rely heavily on online forums as a key input to the requirements process. These forums are valuable sources for information about the users and their needs. Part of the success of open source projects depends on the collaboration and synergy of community members as they engage in active and productive discussions through posting comments, questions, and advice to online forums. However, the lack of feedback which occurs when initial posts go unanswered can negatively affect the users' perception of the project, and can subsequently impede adoption, create frustration, and lead to loss of opportunities from not understanding and satisfying the users' needs. This problem is quite common in open source forums. Our recent analysis of seven open source projects found that anywhere from 14\% to 37\% of user posts never get a reply. This paper directly addresses the problem of unanswered posts by presenting a hybrid recommender system that can be used to identify potential users who might be capable of responding to unanswered posts. The proposed system was evaluated using a statistical cross validation, and results show that it significantly outperformed a benchmark random recommender in terms of precision and recall. In addition, an informal analysis of the relationships between the users and the threads is presented to provide further evidence for the potential of recommender systems in this area.},
	eventtitle = {2010 Third International Workshop on Managing Requirements Knowledge},
	pages = {41--50},
	booktitle = {2010 Third International Workshop on Managing Requirements Knowledge},
	author = {Castro-Herrera, Carlos},
	date = {2010-09},
	note = {10 citations ({CrossRef} 2024/5/19)},
	keywords = {Algorithm design and analysis, Collaboration, Collaborative filtering, Communities, Content based recommenders, Curated by Javier, Ignorebib, Measurement, Message systems, Online forums, Open source, Recommender systems, Relevant users, Requirements process, {TFM}::{SOTA}::{DONE}, Unanswered threads, ⛔ No {INSPIRE} recid found},
}

@inproceedings{minkov_collaborative_2010,
	location = {New York, {NY}, {USA}},
	title = {Collaborative future event recommendation},
	isbn = {978-1-4503-0099-5},
	url = {https://doi.org/10.1145/1871437.1871542},
	doi = {10.1145/1871437.1871542},
	series = {{CIKM} '10},
	abstract = {We demonstrate a method for collaborative ranking of future events. Previous work on recommender systems typically relies on feedback on a particular item, such as a movie, and generalizes this to other items or other people. In contrast, we examine a setting where no feedback exists on the particular item. Because direct feedback does not exist for events that have not taken place, we recommend them based on individuals' preferences for past events, combined collaboratively with other peoples' likes and dislikes. We examine the topic of unseen item recommendation through a user study of academic (scientific) talk recommendation, where we aim to correctly estimate a ranking function for each user, predicting which talks would be of most interest to them. Then by decomposing user parameters into shared and individual dimensions, we induce a similarity metric between users based on the degree to which they share these dimensions. We show that the collaborative ranking predictions of future events are more effective than pure content-based recommendation. Finally, to further reduce the need for explicit user feedback, we suggest an active learning approach for eliciting feedback and a method for incorporating available implicit user cues.},
	pages = {819--828},
	booktitle = {Proceedings of the 19th {ACM} international conference on Information and knowledge management},
	publisher = {Association for Computing Machinery},
	author = {Minkov, Einat and Charrow, Ben and Ledlie, Jonathan and Teller, Seth and Jaakkola, Tommi},
	urldate = {2024-04-22},
	date = {2010-10-26},
	note = {56 citations ({CrossRef} 2024/5/19)},
	keywords = {collaborative filtering, recommendation systems, ⛔ No {INSPIRE} recid found},
}

@article{koren_factor_2010,
	title = {Factor in the neighbors: Scalable and accurate collaborative filtering},
	volume = {4},
	issn = {1556-4681},
	url = {https://doi.org/10.1145/1644873.1644874},
	doi = {10.1145/1644873.1644874},
	shorttitle = {Factor in the neighbors},
	abstract = {Recommender systems provide users with personalized suggestions for products or services. These systems often rely on collaborating filtering ({CF}), where past transactions are analyzed in order to establish connections between users and products. The most common approach to {CF} is based on neighborhood models, which originate from similarities between products or users. In this work we introduce a new neighborhood model with an improved prediction accuracy. Unlike previous approaches that are based on heuristic similarities, we model neighborhood relations by minimizing a global cost function. Further accuracy improvements are achieved by extending the model to exploit both explicit and implicit feedback by the users. Past models were limited by the need to compute all pairwise similarities between items or users, which grow quadratically with input size. In particular, this limitation vastly complicates adopting user similarity models, due to the typical large number of users. Our new model solves these limitations by factoring the neighborhood model, thus making both item-item and user-user implementations scale linearly with the size of the data. The methods are tested on the Netflix data, with encouraging results.},
	pages = {1:1--1:24},
	number = {1},
	journaltitle = {{ACM} Transactions on Knowledge Discovery from Data},
	shortjournal = {{ACM} Trans. Knowl. Discov. Data},
	author = {Koren, Yehuda},
	urldate = {2024-05-16},
	date = {2010},
	note = {494 citations ({CrossRef} 2024/5/19)},
	keywords = {Netflix Prize, Recommender systems, collaborative filtering, ⛔ No {INSPIRE} recid found},
}

@inproceedings{cremonesi_performance_2010,
	location = {New York, {NY}, {USA}},
	title = {Performance of recommender algorithms on top-n recommendation tasks},
	isbn = {978-1-60558-906-0},
	url = {https://dl.acm.org/doi/10.1145/1864708.1864721},
	doi = {10.1145/1864708.1864721},
	series = {{RecSys} '10},
	abstract = {In many commercial systems, the 'best bet' recommendations are shown, but the predicted rating values are not. This is usually referred to as a top-N recommendation task, where the goal of the recommender system is to find a few specific items which are supposed to be most appealing to the user. Common methodologies based on error metrics (such as {RMSE}) are not a natural fit for evaluating the top-N recommendation task. Rather, top-N performance can be directly measured by alternative methodologies based on accuracy metrics (such as precision/recall). An extensive evaluation of several state-of-the art recommender algorithms suggests that algorithms optimized for minimizing {RMSE} do not necessarily perform as expected in terms of top-N recommendation task. Results show that improvements in {RMSE} often do not translate into accuracy improvements. In particular, a naive non-personalized algorithm can outperform some common recommendation approaches and almost match the accuracy of sophisticated algorithms. Another finding is that the very few top popular items can skew the top-N performance. The analysis points out that when evaluating a recommender algorithm on the top-N recommendation task, the test set should be chosen carefully in order to not bias accuracy metrics towards non-personalized solutions. Finally, we offer practitioners new variants of two collaborative filtering algorithms that, regardless of their {RMSE}, significantly outperform other recommender algorithms in pursuing the top-N recommendation task, with offering additional practical advantages. This comes at surprise given the simplicity of these two methods.},
	pages = {39--46},
	booktitle = {Proceedings of the fourth {ACM} conference on Recommender systems},
	publisher = {Association for Computing Machinery},
	author = {Cremonesi, Paolo and Koren, Yehuda and Turrin, Roberto},
	urldate = {2024-02-25},
	date = {2010-09-26},
	note = {851 citations ({CrossRef} 2024/5/19)},
	keywords = {evaluation, precision, recall, top-n recommendations, ⛔ No {INSPIRE} recid found},
}

@inproceedings{mckinney_data_2010,
	location = {Austin, Texas},
	title = {Data Structures for Statistical Computing in Python},
	url = {https://conference.scipy.org/proceedings/scipy2010/mckinney.html},
	doi = {10.25080/Majora-92bf1922-00a},
	eventtitle = {Python in Science Conference},
	pages = {56--61},
	author = {{McKinney}, Wes},
	urldate = {2024-02-06},
	date = {2010},
	note = {198 citations ({INSPIRE} 2024/5/19)
198 citations w/o self ({INSPIRE} 2024/5/19)},
}

@inproceedings{teran_fuzzy_2010,
	location = {Berlin, Heidelberg},
	title = {A Fuzzy Recommender System for {eElections}},
	isbn = {978-3-642-15172-9},
	doi = {10.1007/978-3-642-15172-9_6},
	series = {Lecture Notes in Computer Science},
	abstract = {{eDemocracy} aims to increase participation of citizens in democratic processes through the use of information and communication technologies. In this paper, an architecture of recommender systems for {eElections} using fuzzy clustering methods is proposed. The objective is to assist voters in making decisions by providing information about candidates close to the voters preferences and tendencies. The use of recommender systems for {eGovernment} is a research topic used to reduce information overload, which could help to improve democratic processes.},
	pages = {62--76},
	booktitle = {Electronic Government and the Information Systems Perspective},
	publisher = {Springer},
	author = {Terán, Luis and Meier, Andreas},
	editor = {Andersen, Kim Normann and Francesconi, Enrico and Grönlund, Åke and van Engers, Tom M.},
	date = {2010},
	langid = {english},
	note = {25 citations ({CrossRef} 2024/5/19)},
	keywords = {Fuzzy Clustering, Fuzzy Logic, Recommender Systems, {eDemocracy}, {eElections}, ⛔ No {INSPIRE} recid found},
}

@misc{rendle_bpr_2012,
	title = {{BPR}: Bayesian Personalized Ranking from Implicit Feedback},
	url = {http://arxiv.org/abs/1205.2618},
	doi = {10.48550/arXiv.1205.2618},
	shorttitle = {{BPR}},
	abstract = {Item recommendation is the task of predicting a personalized ranking on a set of items (e.g. websites, movies, products). In this paper, we investigate the most common scenario with implicit feedback (e.g. clicks, purchases). There are many methods for item recommendation from implicit feedback like matrix factorization ({MF}) or adaptive knearest-neighbor ({kNN}). Even though these methods are designed for the item prediction task of personalized ranking, none of them is directly optimized for ranking. In this paper we present a generic optimization criterion {BPR}-Opt for personalized ranking that is the maximum posterior estimator derived from a Bayesian analysis of the problem. We also provide a generic learning algorithm for optimizing models with respect to {BPR}-Opt. The learning method is based on stochastic gradient descent with bootstrap sampling. We show how to apply our method to two state-of-the-art recommender models: matrix factorization and adaptive {kNN}. Our experiments indicate that for the task of personalized ranking our optimization method outperforms the standard learning techniques for {MF} and {kNN}. The results show the importance of optimizing models for the right criterion.},
	number = {{arXiv}:1205.2618},
	publisher = {{arXiv}},
	author = {Rendle, Steffen and Freudenthaler, Christoph and Gantner, Zeno and Schmidt-Thieme, Lars},
	urldate = {2023-07-27},
	date = {2012-05-09},
	keywords = {Computer Science - Information Retrieval, Computer Science - Machine Learning, Statistics - Machine Learning, ⛔ No {INSPIRE} recid found},
}

@inproceedings{rendle_factorization_2010,
	title = {Factorization Machines},
	url = {https://ieeexplore.ieee.org/document/5694074},
	doi = {10.1109/ICDM.2010.127},
	abstract = {In this paper, we introduce Factorization Machines ({FM}) which are a new model class that combines the advantages of Support Vector Machines ({SVM}) with factorization models. Like {SVMs}, {FMs} are a general predictor working with any real valued feature vector. In contrast to {SVMs}, {FMs} model all interactions between variables using factorized parameters. Thus they are able to estimate interactions even in problems with huge sparsity (like recommender systems) where {SVMs} fail. We show that the model equation of {FMs} can be calculated in linear time and thus {FMs} can be optimized directly. So unlike nonlinear {SVMs}, a transformation in the dual form is not necessary and the model parameters can be estimated directly without the need of any support vector in the solution. We show the relationship to {SVMs} and the advantages of {FMs} for parameter estimation in sparse settings. On the other hand there are many different factorization models like matrix factorization, parallel factor analysis or specialized models like {SVD}++, {PITF} or {FPMC}. The drawback of these models is that they are not applicable for general prediction tasks but work only with special input data. Furthermore their model equations and optimization algorithms are derived individually for each task. We show that {FMs} can mimic these models just by specifying the input data (i.e. the feature vectors). This makes {FMs} easily applicable even for users without expert knowledge in factorization models.},
	eventtitle = {2010 {IEEE} International Conference on Data Mining},
	pages = {995--1000},
	booktitle = {2010 {IEEE} International Conference on Data Mining},
	author = {Rendle, Steffen},
	urldate = {2024-05-16},
	date = {2010-12},
	note = {1669 citations ({CrossRef} 2024/5/19)
{ISSN}: 2374-8486},
	keywords = {Computational modeling, Data models, Equations, Frequency modulation, Mathematical model, Predictive models, Support vector machines, factorization machine, sparse data, support vector machine, tensor factorization, ⛔ No {INSPIRE} recid found},
}

@article{maslowska_effectiveness_2011,
	title = {The Effectiveness of Personalized E-mail Newsletters and the Role of Personal Characteristics},
	volume = {14},
	issn = {2152-2715},
	url = {https://www.liebertpub.com/doi/abs/10.1089/cyber.2011.0050},
	doi = {10.1089/cyber.2011.0050},
	abstract = {Personalizing communication means creating persuasive messages that refer to aspects of a person's self. Although the use of personalization is increasing, research on its effectiveness is limited and the results are mixed. This study examined the persuasiveness of personalized e-mail newsletters in terms of increased attention, cognitive activity, evaluation, attitude, intention, and behavior by means of an experiment (n=109). Participants randomly received either a personalized or a generic newsletter advertising a sports center. Personalization triggered a more positive evaluation of the message; however, it did not influence the other effect variables. The effects were moderated by consumers' need for uniqueness, trust, and privacy concerns, suggesting that personalization is a good strategy to increase message evaluation only among individuals who have a high need for uniqueness.},
	pages = {765--770},
	number = {12},
	journaltitle = {Cyberpsychology, Behavior, and Social Networking},
	author = {Maslowska, Ewa and Putte, Bas van den and Smit, Edith G.},
	urldate = {2023-11-16},
	date = {2011-12},
	note = {24 citations ({CrossRef} 2024/5/19)
Publisher: Mary Ann Liebert, Inc., publishers},
	keywords = {Curated by Javier, {TFM}::{SOTA}::{TODO}, ⛔ No {INSPIRE} recid found},
}

@article{pedregosa_scikit-learn_2011,
	title = {Scikit-learn: Machine Learning in Python},
	volume = {12},
	pages = {2825--2830},
	journaltitle = {Journal of Machine Learning Research},
	author = {Pedregosa, F. and Varoquaux, G. and Gramfort, A. and Michel, V. and Thirion, B. and Grisel, O. and Blondel, M. and Prettenhofer, P. and Weiss, R. and Dubourg, V. and Vanderplas, J. and Passos, A. and Cournapeau, D. and Brucher, M. and Perrot, M. and Duchesnay, E.},
	date = {2011},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{bergstra_making_2013,
	title = {Making a Science of Model Search: Hyperparameter Optimization in Hundreds of Dimensions for Vision Architectures},
	url = {https://proceedings.mlr.press/v28/bergstra13.html},
	shorttitle = {Making a Science of Model Search},
	abstract = {Many computer vision algorithms depend on configuration settings that are typically hand-tuned in the course of evaluating the algorithm for a particular data set. While such parameter tuning is often presented as being incidental to the algorithm, correctly setting these parameter choices is frequently critical to realizing a method’s full potential. Compounding matters, these parameters often must be re-tuned when the algorithm is applied to a new problem domain, and the tuning process itself often depends on personal experience and intuition in ways that are hard to quantify or describe. Since the performance of a given technique depends on both the fundamental quality of the algorithm and the details of its tuning, it is sometimes difficult to know whether a given technique is genuinely better, or simply better tuned.     In this work, we propose a meta-modeling approach to support automated hyperparameter optimization, with the goal of providing practical tools that replace hand-tuning with a reproducible and unbiased optimization process. Our approach is to expose the underlying expression graph of how a performance metric (e.g. classification accuracy on validation examples) is computed from hyperparameters that govern not only how individual processing steps are applied, but even which processing steps are included.  A hyperparameter optimization algorithm transforms this graph into a program for optimizing that performance metric.  Our approach yields state of the art results on three disparate computer vision problems: a face-matching verification task ({LFW}), a face identification task ({PubFig}83) and an object recognition task ({CIFAR}-10), using a single broad class of feed-forward vision architectures.},
	eventtitle = {International Conference on Machine Learning},
	pages = {115--123},
	booktitle = {Proceedings of the 30th International Conference on Machine Learning},
	publisher = {{PMLR}},
	author = {Bergstra, James and Yamins, Daniel and Cox, David},
	urldate = {2024-04-30},
	date = {2013-02-13},
	langid = {english},
	note = {{ISSN}: 1938-7228},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{pham_general_2015,
	title = {A general graph-based model for recommendation in event-based social networks},
	url = {https://ieeexplore.ieee.org/abstract/document/7113315},
	doi = {10.1109/ICDE.2015.7113315},
	abstract = {Event-based social networks ({EBSNs}), such as Meetup and Plancast, which offer platforms for users to plan, arrange, and publish events, have gained increasing popularity and rapid growth. {EBSNs} capture not only the online social relationship, but also the offline interactions from offline events. They contain rich heterogeneous information, including multiple types of entities, such as users, events, groups and tags, and their interaction relations. Three recommendation tasks, namely recommending groups to users, recommending tags to groups, and recommending events to users, have been explored in three separate studies. However, none of the proposed methods can handle all the three recommendation tasks. In this paper, we propose a general graph-based model, called {HeteRS}, to solve the three recommendation problems on {EBSNs} in one framework. Our method models the rich information with a heterogeneous graph and considers the recommendation problem as a query-dependent node proximity problem. To address the challenging issue of weighting the influences between different types of entities, we propose a learning scheme to set the influence weights between different types of entities. Experimental results on two real-world datasets demonstrate that our proposed method significantly outperforms the state-of-the-art methods for all the three recommendation tasks, and the learned influence weights help understanding user behaviors.},
	eventtitle = {2015 {IEEE} 31st International Conference on Data Engineering},
	pages = {567--578},
	booktitle = {2015 {IEEE} 31st International Conference on Data Engineering},
	author = {Pham, Tuan-Anh Nguyen and Li, Xutao and Cong, Gao and Zhang, Zhenjie},
	urldate = {2024-04-19},
	date = {2015-04},
	note = {77 citations ({CrossRef} 2024/5/19)
{ISSN}: 2375-026X},
	keywords = {Irrigation, ⛔ No {INSPIRE} recid found},
}

@online{buterin_daos_2014,
	title = {{DAOs}, {DACs}, {DAs} and More: An Incomplete Terminology Guide},
	url = {https://blog.ethereum.org/2014/05/06/daos-dacs-das-and-more-an-incomplete-terminology-guide},
	shorttitle = {{DAOs}, {DACs}, {DAs} and More},
	titleaddon = {Ethereum Foundation Blog},
	author = {Buterin, Vitalik},
	urldate = {2023-11-14},
	date = {2014-05-06},
	langid = {english},
	keywords = {{ComSoc}::Citable, ⛔ No {INSPIRE} recid found},
}

@inproceedings{macedo_context-aware_2015,
	location = {New York, {NY}, {USA}},
	title = {Context-Aware Event Recommendation in Event-based Social Networks},
	isbn = {978-1-4503-3692-5},
	url = {https://dl.acm.org/doi/10.1145/2792838.2800187},
	doi = {10.1145/2792838.2800187},
	series = {{RecSys} '15},
	abstract = {The Web has grown into one of the most important channels to communicate social events nowadays. However, the sheer volume of events available in event-based social networks ({EBSNs}) often undermines the users' ability to choose the events that best fit their interests. Recommender systems appear as a natural solution for this problem, but differently from classic recommendation scenarios (e.g. movies, books), the event recommendation problem is intrinsically cold-start. Indeed, events published in {EBSNs} are typically short-lived and, by definition, are always in the future, having little or no trace of historical attendance. To overcome this limitation, we propose to exploit several contextual signals available from {EBSNs}. In particular, besides content-based signals based on the events' description and collaborative signals derived from users' {RSVPs}, we exploit social signals based on group memberships, location signals based on the users' geographical preferences, and temporal signals derived from the users' time preferences. Moreover, we combine the proposed signals for learning to rank events for personalized recommendation. Thorough experiments using a large crawl of Meetup.com demonstrate the effectiveness of our proposed contextual learning approach in contrast to state-of-the-art event recommenders from the literature.},
	pages = {123--130},
	booktitle = {Proceedings of the 9th {ACM} Conference on Recommender Systems},
	publisher = {Association for Computing Machinery},
	author = {Macedo, Augusto Q. and Marinho, Leandro B. and Santos, Rodrygo L.T.},
	urldate = {2023-10-30},
	date = {2015-09-16},
	note = {134 citations ({CrossRef} 2024/5/19)},
	keywords = {algorithms, event-based social networks, experimentation, recommender systems, ⛔ No {INSPIRE} recid found},
}

@inproceedings{tian_recommending_2013,
	location = {New York, {NY}, {USA}},
	title = {Recommending scientific articles using bi-relational graph-based iterative {RWR}},
	isbn = {978-1-4503-2409-0},
	url = {https://dl.acm.org/doi/10.1145/2507157.2507212},
	doi = {10.1145/2507157.2507212},
	series = {{RecSys} '13},
	abstract = {The overabundance of scientific article information has created much inconvenience to researchers seeking interesting articles online. In this paper, we provide a Bi-Relational graph to represent the heterogenous information of scientific article recommendation system, which includes three parts: the article content similarity, researcher interest correlation, and researcher-article readership. Meanwhile, an iterative random walk with restarts learning method is proposed on the Bi-Relational graph to recommend a researcher rating for each article by making use of the known information. The proposed method has ability to perform both old and new article recommendation. A series of experiments on {CiteULike} dataset have shown that our method is more effective than other testing methods in the paper.},
	pages = {399--402},
	booktitle = {Proceedings of the 7th {ACM} conference on Recommender systems},
	publisher = {Association for Computing Machinery},
	author = {Tian, Geng and Jing, Liping},
	urldate = {2024-02-01},
	date = {2013-10-12},
	note = {29 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, bi-relational graph, iterative rwr, new article recommendation, old article recommendation, recommending scientific article, ⛔ No {INSPIRE} recid found},
}

@inproceedings{perozzi_deepwalk_2014,
	location = {New York, {NY}, {USA}},
	title = {{DeepWalk}: online learning of social representations},
	isbn = {978-1-4503-2956-9},
	url = {https://doi.org/10.1145/2623330.2623732},
	doi = {10.1145/2623330.2623732},
	series = {{KDD} '14},
	shorttitle = {{DeepWalk}},
	abstract = {We present {DeepWalk}, a novel approach for learning latent representations of vertices in a network. These latent representations encode social relations in a continuous vector space, which is easily exploited by statistical models. {DeepWalk} generalizes recent advancements in language modeling and unsupervised feature learning (or deep learning) from sequences of words to graphs. {DeepWalk} uses local information obtained from truncated random walks to learn latent representations by treating walks as the equivalent of sentences. We demonstrate {DeepWalk}'s latent representations on several multi-label network classification tasks for social networks such as {BlogCatalog}, Flickr, and {YouTube}. Our results show that {DeepWalk} outperforms challenging baselines which are allowed a global view of the network, especially in the presence of missing information. {DeepWalk}'s representations can provide F1 scores up to 10\% higher than competing methods when labeled data is sparse. In some experiments, {DeepWalk}'s representations are able to outperform all baseline methods while using 60\% less training data. {DeepWalk} is also scalable. It is an online learning algorithm which builds useful incremental results, and is trivially parallelizable. These qualities make it suitable for a broad class of real world applications such as network classification, and anomaly detection.},
	pages = {701--710},
	booktitle = {Proceedings of the 20th {ACM} {SIGKDD} international conference on Knowledge discovery and data mining},
	publisher = {Association for Computing Machinery},
	author = {Perozzi, Bryan and Al-Rfou, Rami and Skiena, Steven},
	urldate = {2024-05-16},
	date = {2014},
	note = {5637 citations ({CrossRef} 2024/5/19)},
	keywords = {deep learning, latent representations, learning with partial labels, network classification, online learning, social networks, ⛔ No {INSPIRE} recid found},
}

@inproceedings{duvenaud_convolutional_2015,
	title = {Convolutional Networks on Graphs for Learning Molecular Fingerprints},
	volume = {28},
	url = {https://papers.nips.cc/paper_files/paper/2015/hash/f9be311e65d81a9ad8150a60844bb94c-Abstract.html},
	abstract = {We introduce a convolutional neural network that operates directly on graphs.These networks allow end-to-end learning of prediction pipelines whose inputs are graphs of arbitrary size and shape.The architecture we present generalizes standard molecular feature extraction methods based on circular fingerprints.We show that these data-driven features are more interpretable, and have better predictive performance on a variety of tasks.},
	booktitle = {Advances in Neural Information Processing Systems},
	publisher = {Curran Associates, Inc.},
	author = {Duvenaud, David K and Maclaurin, Dougal and Iparraguirre, Jorge and Bombarell, Rafael and Hirzel, Timothy and Aspuru-Guzik, Alan and Adams, Ryan P},
	urldate = {2024-05-16},
	date = {2015},
	keywords = {⛔ No {INSPIRE} recid found},
}

@online{tual_ethereum_2015,
	title = {Ethereum Launches},
	url = {https://blog.ethereum.org/2015/07/30/ethereum-launches},
	titleaddon = {Ethereum Foundation Blog},
	author = {Tual, Stephan},
	urldate = {2024-04-11},
	date = {2015-06-30},
	langid = {english},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{wulczyn_growing_2016,
	location = {Republic and Canton of Geneva, {CHE}},
	title = {Growing Wikipedia Across Languages via Recommendation},
	isbn = {978-1-4503-4143-1},
	url = {https://dl.acm.org/doi/10.1145/2872427.2883077},
	doi = {10.1145/2872427.2883077},
	series = {{WWW} '16},
	abstract = {The different Wikipedia language editions vary dramatically in how comprehensive they are. As a result, most language editions contain only a small fraction of the sum of information that exists across all Wikipedias. In this paper, we present an approach to filling gaps in article coverage across different Wikipedia editions. Our main contribution is an end-to-end system for recommending articles for creation that exist in one language but are missing in an- other. The system involves identifying missing articles, ranking the missing articles according to their importance, and recommending important missing articles to editors based on their interests. We empirically validate our models in a controlled experiment involving 12,000 French Wikipedia editors. We find that personalizing recommendations increases editor engagement by a factor of two. Moreover, recommending articles increases their chance of being created by a factor of 3.2. Finally, articles created as a result of our recommendations are of comparable quality to organically created articles. Overall, our system leads to more engaged editors and faster growth of Wikipedia with no effect on its quality.},
	pages = {975--985},
	booktitle = {Proceedings of the 25th International Conference on World Wide Web},
	publisher = {International World Wide Web Conferences Steering Committee},
	author = {Wulczyn, Ellery and West, Robert and Zia, Leila and Leskovec, Jure},
	urldate = {2023-07-12},
	date = {2016},
	note = {24 citations ({CrossRef} 2024/5/19)},
	keywords = {Curated by Javier, {TFM}::{SOTA}::{DONE}, Wikipedia, recommendation systems, translation, ⛔ No {INSPIRE} recid found},
}

@book{aggarwal_recommender_2016,
	location = {Cham},
	title = {Recommender Systems},
	isbn = {978-3-319-29659-3},
	url = {http://link.springer.com/10.1007/978-3-319-29659-3},
	publisher = {Springer International Publishing},
	author = {Aggarwal, Charu C.},
	urldate = {2023-09-04},
	date = {2016},
	langid = {english},
	doi = {10.1007/978-3-319-29659-3},
	keywords = {Clustering and neighborhood-based methods, Collaborative filtering, Data mining, Graph based methods, Industrial systems, Item-oriented and user-oriented methods, Knowledge based recommender systems, Link prediction methods, Machine learning, Mobile recommender systems, Personalization, Recommender systems, Social network analysis, Social networks, Social tagging, ⛔ No {INSPIRE} recid found},
}

@inproceedings{hamilton_inductive_2017,
	title = {Inductive Representation Learning on Large Graphs},
	volume = {30},
	url = {https://proceedings.neurips.cc/paper_files/paper/2017},
	abstract = {Low-dimensional embeddings of nodes in large graphs have proved extremely useful in a variety of prediction tasks, from content recommendation to identifying protein functions. However, most existing approaches require that all nodes in the graph are present during training of the embeddings; these previous approaches are inherently transductive and do not naturally generalize to unseen nodes. Here we present {GraphSAGE}, a general, inductive framework that leverages node feature information (e.g., text attributes) to efficiently generate node embeddings.  Instead of training individual embeddings for each node, we learn a function that generates embeddings by sampling and aggregating features from a node's local neighborhood. Our algorithm outperforms strong baselines on three inductive node-classification benchmarks: we classify the category of unseen nodes in evolving information graphs based on citation and Reddit post data, and we show that our algorithm generalizes to completely unseen graphs using a multi-graph dataset of protein-protein interactions.},
	booktitle = {Advances in Neural Information Processing Systems},
	publisher = {Curran Associates, Inc.},
	author = {Hamilton, Will and Ying, Zhitao and Leskovec, Jure},
	urldate = {2024-05-16},
	date = {2017},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{he_neural_2017,
	location = {Republic and Canton of Geneva, {CHE}},
	title = {Neural Collaborative Filtering},
	isbn = {978-1-4503-4913-0},
	url = {https://doi.org/10.1145/3038912.3052569},
	doi = {10.1145/3038912.3052569},
	series = {{WWW} '17},
	abstract = {In recent years, deep neural networks have yielded immense success on speech recognition, computer vision and natural language processing. However, the exploration of deep neural networks on recommender systems has received relatively less scrutiny. In this work, we strive to develop techniques based on neural networks to tackle the key problem in recommendation --- collaborative filtering --- on the basis of implicit feedback. Although some recent work has employed deep learning for recommendation, they primarily used it to model auxiliary information, such as textual descriptions of items and acoustic features of musics. When it comes to model the key factor in collaborative filtering --- the interaction between user and item features, they still resorted to matrix factorization and applied an inner product on the latent features of users and items. By replacing the inner product with a neural architecture that can learn an arbitrary function from data, we present a general framework named {NCF}, short for Neural network-based Collaborative Filtering. {NCF} is generic and can express and generalize matrix factorization under its framework. To supercharge {NCF} modelling with non-linearities, we propose to leverage a multi-layer perceptron to learn the user-item interaction function. Extensive experiments on two real-world datasets show significant improvements of our proposed {NCF} framework over the state-of-the-art methods. Empirical evidence shows that using deeper layers of neural networks offers better recommendation performance.},
	pages = {173--182},
	booktitle = {Proceedings of the 26th International Conference on World Wide Web},
	publisher = {International World Wide Web Conferences Steering Committee},
	author = {He, Xiangnan and Liao, Lizi and Zhang, Hanwang and Nie, Liqiang and Hu, Xia and Chua, Tat-Seng},
	urldate = {2024-05-16},
	date = {2017},
	note = {3384 citations ({CrossRef} 2024/5/19)},
	keywords = {collaborative filtering, deep learning, implicit feedback, matrix factorization, neural networks, ⛔ No {INSPIRE} recid found},
}

@software{kula_spotlight_2017,
	title = {Spotlight},
	url = {https://github.com/maciejkula/spotlight},
	author = {Kula, Maciej},
	date = {2017},
	keywords = {⛔ No {INSPIRE} recid found},
}

@article{garzia_research_2016,
	title = {Research on Voting Advice Applications: State of the Art and Future Directions},
	volume = {8},
	issn = {1944-2866},
	url = {https://onlinelibrary.wiley.com/doi/10.1002/poi3.140},
	doi = {10.1002/poi3.140},
	shorttitle = {Research on Voting Advice Applications},
	abstract = {Voting Advice Applications ({VAAs}) have experienced a great deal of success over the past decade, and are now used in many countries around the world. This editorial introduces a Special Issue result...},
	pages = {376--390},
	number = {4},
	journaltitle = {Policy \& Internet},
	author = {Garzia, Diego and Marschall, Stefan},
	urldate = {2024-02-07},
	date = {2016-12-01},
	langid = {english},
	note = {20 citations ({CrossRef} 2024/5/19)
Publisher: John Wiley \& Sons, Ltd},
	keywords = {{TFM}::{SOTA}::{TODO}, ⛔ No {INSPIRE} recid found},
}

@article{uriarte_blockchain-based_2018,
	title = {Blockchain-Based Decentralized Cloud/Fog Solutions: Challenges, Opportunities, and Standards},
	volume = {2},
	issn = {2471-2833},
	url = {https://ieeexplore.ieee.org/abstract/document/8515145},
	doi = {10.1109/MCOMSTD.2018.1800020},
	shorttitle = {Blockchain-Based Decentralized Cloud/Fog Solutions},
	abstract = {Smart contracts and blockchain have the potential to change the current shape of cloud markets by enabling the development of completely decentralized cloud/fog solutions, which lower costs and enforce predictable results without requiring any intermediary. In this article, we survey three of these solutions, namely Golem, {iExec}, and {SONM}, compare them, and identify some of the problems they leave unsolved. Moreover, we consider existing standards for the development of interoperable decentralized cloud solutions that would allow such systems to compete with large providers and would prevent vendor lock-in. We believe that our study contributes to the evolution of cloud systems not only by pointing out incompatibilities among projects and possible solutions for research problems in the area, but also by reviewing the existing standards and suggesting new standardization opportunities.},
	pages = {22--28},
	number = {3},
	journaltitle = {{IEEE} Communications Standards Magazine},
	author = {Uriarte, Rafael Brundo and {DeNicola}, Rocco},
	urldate = {2024-02-06},
	date = {2018-09},
	note = {60 citations ({CrossRef} 2024/5/19)
Conference Name: {IEEE} Communications Standards Magazine},
	keywords = {Blockchain, Cloud computing, Computer architecture, Peer-to-peer computing, Task analysis, ⛔ No {INSPIRE} recid found},
}

@article{sun_enhancing_2017,
	title = {Enhancing developer recommendation with supplementary information via mining historical commits},
	volume = {134},
	issn = {0164-1212},
	url = {https://www.sciencedirect.com/science/article/pii/S0164121217302091},
	doi = {10.1016/j.jss.2017.09.021},
	abstract = {Given a software issue request, one important activity is to recommend suitable developers to resolve it. A number of approaches have been proposed on developer recommendation. These developer recommendation techniques tend to recommend experienced developers, i.e., the more experienced a developer is, the more possible he/she is recommended. However, if the experienced developers are hectic, the junior developers may be employed to finish the incoming issue. But they may have difficulty in these tasks for lack of development experience. In this article, we propose an approach, {EDR}\_SI, to enhance developer recommendation by considering their expertise and developing habits. Furthermore, {EDR}\_SI also provides the personalized supplementary information for developers to use, such as personalized source code files, developer network and source-code change history. An empirical study on five open source subjects is conducted to evaluate the effectiveness of {EDR}\_SI. In our study, {EDR}\_SI is also compared with the state-of-art developer recommendation techniques, {iMacPro}, Location and {ABA}-Time-tf-idf, to evaluate the effectiveness of developer recommendation, and the results show that {EDR}\_SI can not only improve the accuracy of developer recommendation, but also effectively provide useful supplementary information for them to use when they implement the incoming issue requests.},
	pages = {355--368},
	journaltitle = {Journal of Systems and Software},
	shortjournal = {Journal of Systems and Software},
	author = {Sun, Xiaobing and Yang, Hui and Xia, Xin and Li, Bin},
	urldate = {2024-01-31},
	date = {2017-12-01},
	note = {33 citations ({CrossRef} 2024/5/19)},
	keywords = {Bug assignment, Collaborative topic modeling, Commit repository, Developer recommendation, Ignorebib, Personalized recommendation, Supplementary information recommendation, {TFM}::{SOTA}::Descartado, ⛔ No {INSPIRE} recid found},
}

@inproceedings{lian_xdeepfm_2018,
	title = {{xDeepFM}: Combining Explicit and Implicit Feature Interactions for Recommender Systems},
	url = {http://arxiv.org/abs/1803.05170},
	doi = {10.1145/3219819.3220023},
	shorttitle = {{xDeepFM}},
	abstract = {Combinatorial features are essential for the success of many commercial models. Manually crafting these features usually comes with high cost due to the variety, volume and velocity of raw data in web-scale systems. Factorization based models, which measure interactions in terms of vector product, can learn patterns of combinatorial features automatically and generalize to unseen features as well. With the great success of deep neural networks ({DNNs}) in various fields, recently researchers have proposed several {DNN}-based factorization model to learn both low- and high-order feature interactions. Despite the powerful ability of learning an arbitrary function from data, plain {DNNs} generate feature interactions implicitly and at the bit-wise level. In this paper, we propose a novel Compressed Interaction Network ({CIN}), which aims to generate feature interactions in an explicit fashion and at the vector-wise level. We show that the {CIN} share some functionalities with convolutional neural networks ({CNNs}) and recurrent neural networks ({RNNs}). We further combine a {CIN} and a classical {DNN} into one unified model, and named this new model {eXtreme} Deep Factorization Machine ({xDeepFM}). On one hand, the {xDeepFM} is able to learn certain bounded-degree feature interactions explicitly; on the other hand, it can learn arbitrary low- and high-order feature interactions implicitly. We conduct comprehensive experiments on three real-world datasets. Our results demonstrate that {xDeepFM} outperforms state-of-the-art models. We have released the source code of {xDeepFM} at {\textbackslash}url\{https://github.com/Leavingseason/{xDeepFM}\}.},
	pages = {1754--1763},
	booktitle = {Proceedings of the 24th {ACM} {SIGKDD} International Conference on Knowledge Discovery \& Data Mining},
	author = {Lian, Jianxun and Zhou, Xiaohuan and Zhang, Fuzheng and Chen, Zhongxia and Xie, Xing and Sun, Guangzhong},
	urldate = {2023-11-15},
	date = {2018-07-19},
	eprinttype = {arxiv},
	eprint = {1803.05170 [cs]},
	note = {601 citations ({CrossRef} 2024/5/19)},
	keywords = {Computer Science - Information Retrieval, Computer Science - Machine Learning, ⛔ No {INSPIRE} recid found},
}

@inproceedings{zhang_collective_2015,
	location = {New York, {NY}, {USA}},
	title = {A Collective Bayesian Poisson Factorization Model for Cold-start Local Event Recommendation},
	isbn = {978-1-4503-3664-2},
	url = {https://dl.acm.org/doi/10.1145/2783258.2783336},
	doi = {10.1145/2783258.2783336},
	series = {{KDD} '15},
	abstract = {Event-based social networks ({EBSNs}), in which organizers publish events to attract other users in local city to attend offline, emerge in recent years and grow rapidly. Due to the large volume of events in {EBSNs}, event recommendation is essential. A few recent works focus on this task, while almost all the methods need that each event to be recommended should have been registered by some users to attend. Thus they ignore two essential characteristics of events in {EBSNs}: (1) a large number of new events will be published every day which means many events have few participants in the beginning, (2) events have life cycles which means outdated events should not be recommended. Overall, event recommendation in {EBSNs} inevitably faces the cold-start problem. In this work, we address the new problem of cold-start local event recommendation in {EBSNs}. We propose a collective Bayesian Poisson factorization ({CBPF}) model for handling this problem. {CBPF} takes recently proposed Bayesian Poisson factorization as its basic unit to model user response to events, social relation, and content text separately. Then it further jointly connects these units by the idea of standard collective matrix factorization model. Moreover, in our model event textual content, organizer, and location information are utilized to learn representation of cold-start events for predicting user response to them. Besides, an efficient coordinate ascent algorithm is adopted to learn the model. We conducted comprehensive experiments on real datasets crawled from {EBSNs} and the results demonstrate our proposed model is effective and outperforms several alternative methods.},
	pages = {1455--1464},
	booktitle = {Proceedings of the 21th {ACM} {SIGKDD} International Conference on Knowledge Discovery and Data Mining},
	publisher = {Association for Computing Machinery},
	author = {Zhang, Wei and Wang, Jianyong},
	urldate = {2023-11-02},
	date = {2015},
	note = {72 citations ({CrossRef} 2024/5/19)},
	keywords = {bayesian poisson factorization, cold-start recommendation, event recommendation, event-based social networks, ⛔ No {INSPIRE} recid found},
}

@inproceedings{yin_joint_2018,
	title = {Joint Event-Partner Recommendation in Event-Based Social Networks},
	url = {https://ieeexplore.ieee.org/abstract/document/8509309},
	doi = {10.1109/ICDE.2018.00088},
	abstract = {With the prevalent trend of combining online and offline interactions among users in event-based social networks ({EBSNs}), event recommendation has become an essential means to help people discover new interesting events to attend. However, existing literatures on event recommendations ignore the social attribute of events: people prefer to attend events with their friends or family rather than alone. Therefore, we propose a new recommendation paradigm: joint event-partner recommendation that focuses on recommending event-partner pairs to users. In this paper, we focus on the new problem of joint event-partner recommendation in {EBSNs}, which is extremely challenging due to the intrinsic cold-start property of events, the complex decision-making process for choosing event-partner pairs and the huge prediction space of event-partner combinations. We propose a generic graph-based embedding model ({GEM}) to collectively embed all the observed relations among users, events, locations, time and text content in a shared low-dimension space, which is able to leverage the correlation between events and their associated content and contextual information to address the cold-start issue effectively. To accelerate the convergence of {GEM} and improve its modeling accuracy, an adaptive noise sampler is developed to generate adversarial negative samples in the model optimization. Besides, to speed up the online recommendation, we propose a novel space transformation method to project each event-partner pair to one point in a new space and then develop effective space pruning and efficient online recommendation techniques. We conduct comprehensive experiments on our created real benchmark datasets, and the experimental results demonstrate the superiority of our proposals in terms of recommendation effectiveness, efficiency and scalability},
	eventtitle = {2018 {IEEE} 34th International Conference on Data Engineering ({ICDE})},
	pages = {929--940},
	booktitle = {2018 {IEEE} 34th International Conference on Data Engineering ({ICDE})},
	author = {Yin, Hongzhi and Zou, Lei and Nguyen, Quoc Viet Hung and Huang, Zi and Zhou, Xiaofang},
	urldate = {2023-11-02},
	date = {2018-04},
	note = {57 citations ({CrossRef} 2024/5/19)
{ISSN}: 2375-026X},
	keywords = {Ignorebib, ⛔ No {INSPIRE} recid found},
}

@inproceedings{wang_neural_2019,
	location = {New York, {NY}, {USA}},
	title = {Neural Graph Collaborative Filtering},
	isbn = {978-1-4503-6172-9},
	url = {https://dl.acm.org/doi/10.1145/3331184.3331267},
	doi = {10.1145/3331184.3331267},
	series = {{SIGIR}'19},
	abstract = {Learning vector representations (aka. embeddings) of users and items lies at the core of modern recommender systems. Ranging from early matrix factorization to recently emerged deep learning based methods, existing efforts typically obtain a user's (or an item's) embedding by mapping from pre-existing features that describe the user (or the item), such as {ID} and attributes. We argue that an inherent drawback of such methods is that, the collaborative signal, which is latent in user-item interactions, is not encoded in the embedding process. As such, the resultant embeddings may not be sufficient to capture the collaborative filtering effect. In this work, we propose to integrate the user-item interactions - more specifically the bipartite graph structure - into the embedding process. We develop a new recommendation framework Neural Graph Collaborative Filtering ({NGCF}), which exploits the user-item graph structure by propagating embeddings on it. This leads to the expressive modeling of high-order connectivity in user-item graph, effectively injecting the collaborative signal into the embedding process in an explicit manner. We conduct extensive experiments on three public benchmarks, demonstrating significant improvements over several state-of-the-art models like {HOP}-Rec [39] and Collaborative Memory Network [5]. Further analysis verifies the importance of embedding propagation for learning better user and item representations, justifying the rationality and effectiveness of {NGCF}. Codes are available at https://github.com/xiangwang1223/neural\_graph\_collaborative\_filtering.},
	pages = {165--174},
	booktitle = {Proceedings of the 42nd International {ACM} {SIGIR} Conference on Research and Development in Information Retrieval},
	publisher = {Association for Computing Machinery},
	author = {Wang, Xiang and He, Xiangnan and Wang, Meng and Feng, Fuli and Chua, Tat-Seng},
	urldate = {2024-04-23},
	date = {2019-07-18},
	note = {1657 citations ({CrossRef} 2024/5/19)},
	keywords = {collaborative filtering, embedding propagation, graph neural network, high-order connectivity, recommendation, ⛔ No {INSPIRE} recid found},
}

@article{yang_forum_2014,
	title = {Forum Thread Recommendation for Massive Open Online Courses},
	abstract = {Recently, Massive Open Online Courses ({MOOCs}) have garnered a high level of interest in the media. With larger and larger numbers of students participating in each course, ﬁnding useful and informative threads in increasingly crowded course discussion forums becomes a challenging issue for students. In this work, we address this thread overload problem by taking advantage of an adaptive feature-based matrix factorization framework to make thread recommendations. A key component of our approach is a feature space design that eﬀectively characterizes student behaviors in the forum in order to match threads and users. This eﬀort includes content level modeling, social peer connections, and other forum activities. The results from our experiment conducted on one {MOOC} course show promise that our thread recommendation method has potential to direct students to threads they might be interested in.},
	pages = {257--260},
	journaltitle = {Proceedings of the 7th International Conference on Educational Data Mining},
	author = {Yang, Diyi and Piergallini, Mario and Howley, Iris and Rose, Carolyn},
	date = {2014-07},
	langid = {english},
	keywords = {Ignorebib, {TFM}::{SOTA}::{DONE}, ⛔ No {INSPIRE} recid found},
}

@article{halaburda_will_2019,
	title = {Will We Realize Blockchain’s Promise of Decentralization?},
	issn = {0017-8012},
	url = {https://hbr.org/2019/09/will-we-realize-blockchains-promise-of-decentralization},
	abstract = {The promise of blockchain is decentralized governance. However, managers need to carefully consider two things. First, decentralized governance is not a necessary feature of blockchain; it needs to be enacted. Second, the benefits of decentralized governance may not always be worth the associated costs. Protocol developers may be able to work more effectively on their own or in small teams. As increasingly more businesses move core functions to blockchain the distinction between centralized and decentralized governance becomes increasingly important. There are many expected benefits from decentralization and those benefits may elude us if decentralization fails in practice.},
	journaltitle = {Harvard Business Review},
	author = {Halaburda, Hanna and Mueller-Bloch, Christoph},
	urldate = {2023-12-11},
	date = {2019-09-04},
	note = {Section: Technology and analytics},
	keywords = {Blockchain, Technology and analytics, ⛔ No {INSPIRE} recid found},
}

@inproceedings{argyriou_microsoft_2020,
	location = {New York, {NY}, {USA}},
	title = {Microsoft Recommenders: Best Practices for Production-Ready Recommendation Systems},
	isbn = {978-1-4503-7024-0},
	url = {https://dl.acm.org/doi/10.1145/3366424.3382692},
	doi = {10.1145/3366424.3382692},
	series = {{WWW} '20},
	shorttitle = {Microsoft Recommenders},
	abstract = {Recommendation algorithms have been widely applied in various contemporary business areas, however the process of implementing them in production systems is complex and has to address significant challenges. We present Microsoft Recommenders, an open-source Github repository for helping researchers, developers and non-experts in general to prototype, experiment with and bring to production both classic and state-of-the-art recommendation algorithms. A focus of this repository is on best practices in development of recommendation systems. We have also incorporated learnings from our experience with recommendation systems in production, in order to enhance ease of use; speed of implementation and deployment; scalability and performance.},
	pages = {50--51},
	booktitle = {Companion Proceedings of the Web Conference 2020},
	publisher = {Association for Computing Machinery},
	author = {Argyriou, Andreas and González-Fierro, Miguel and Zhang, Le},
	urldate = {2023-12-05},
	date = {2020},
	note = {12 citations ({CrossRef} 2024/5/19)},
	keywords = {Algorithms, Libraries, Recommender systems, ⛔ No {INSPIRE} recid found},
}

@inproceedings{chueshev_expanding_2020,
	location = {Adelaide, {SA}, Australia},
	title = {Expanding the Number of Reviewers in Open-Source Projects by Recommending Appropriate Developers},
	doi = {10.1109/ICSME46990.2020.00054},
	abstract = {Code review is an important part of the development of any software project. Recently, many open source projects have begun practicing lightweight and tool-based code review (a.k.a modern code review) to make the process simpler and more efficient. However, those practices still require reviewers, of which there may not be sufficiently many to ensure timely decisions. In this paper, we propose a recommender-based approach to be used by open-source projects to increase the number of reviewers from among the appropriate developers. We first motivate our approach by an exploratory study of nine projects hosted on {GitHub} and Gerrit. Secondly, we build the recommender system itself, which, given a code change, initially searches for relevant reviewers based on similarities between the reviewing history and the files affected by the change, and then augments this set with developers who have a similar development history as these reviewers but have little or no relevant reviewing experience. To make these recommendations, we rely on collaborative filtering, and more precisely, on matrix factorization. Our evaluation shows that all nine projects could benefit from our system by using it both to get recommendations of previous reviewers and to expand their number from among the appropriate developers.},
	eventtitle = {2020 {IEEE} International Conference on Software Maintenance and Evolution ({ICSME})},
	pages = {499--510},
	booktitle = {2020 {IEEE} International Conference on Software Maintenance and Evolution ({ICSME})},
	publisher = {{IEEE}},
	author = {Chueshev, Aleksandr and Lawall, Julia and Bendraou, Reda and Ziadi, Tewfik},
	date = {2020-09},
	note = {5 citations ({CrossRef} 2024/5/19)
{ISSN}: 2576-3148},
	keywords = {Conferences, Curated by Javier, {GitHub}, History, Open source software, Recommender systems, Software development management, Software maintenance, {TFM}::{SOTA}::{DONE}, code review, collaborative filtering, matrix factorization, recommender systems, ⛔ No {INSPIRE} recid found},
}

@inproceedings{di_sipio_multinomial_2020,
	location = {New York, {NY}, {USA}},
	title = {A Multinomial Naïve Bayesian ({MNB}) Network to Automatically Recommend Topics for {GitHub} Repositories},
	isbn = {978-1-4503-7731-7},
	url = {https://dl.acm.org/doi/10.1145/3383219.3383227},
	doi = {10.1145/3383219.3383227},
	series = {{EASE} '20},
	abstract = {{GitHub} has become a precious service for storing and managing software source code. Over the last year, 10M new developers have joined the {GitHub} community, contributing to more than 44M repositories. In order to help developers increase the reachability of their repositories, in 2017 {GitHub} introduced the possibility to classify them by means of topics. However, assigning wrong topics to a given repository can compromise the possibility of helping other developers approach it, and thus preventing them from contributing to its development. In this paper we investigate the application of Multinomial Naïve Bayesian ({MNB}) networks to automatically classify {GitHub} repositories. By analyzing the {README} file(s) of the repository to be classified and the source code implementing it, the conceived approach is able to recommend {GitHub} topics. To the best of our knowledge, this is the first supervised approach addressing the considered problem. Consequently, since there exists no suitable baseline for the comparison, we validated the approach by considering different metrics, aiming to study various quality aspects.},
	pages = {71--80},
	booktitle = {Proceedings of the 24th International Conference on Evaluation and Assessment in Software Engineering},
	publisher = {Association for Computing Machinery},
	author = {Di Sipio, Claudio and Rubei, Riccardo and Di Ruscio, Davide and Nguyen, Phuong T.},
	urldate = {2024-02-01},
	date = {2020},
	note = {24 citations ({CrossRef} 2024/5/19)},
	keywords = {{GitHub} topics, Ignorebib, Multinomial Naïve Bayesian network, Recommender systems, ⛔ No {INSPIRE} recid found},
}

@inproceedings{parthy_using_2019,
	location = {Montreal, Quebec, Canada},
	title = {Using machine learning to recommend correctness checks for geographic map data},
	url = {https://dl.acm.org/doi/10.1109/ICSE-SEIP.2019.00032},
	doi = {10.1109/ICSE-SEIP.2019.00032},
	series = {{ICSE}-{SEIP} '19},
	abstract = {Developing an industry application that serves geographic map data to users across the world presents the significant challenge of checking the data using "data correctness checks." The size of data that needs to be checked---the entire world---and data churn rate---thousands per day---makes executing the full set of candidate checks cost prohibitive. Current techniques rely on hand-curated static subsets of checks to be run at different stages of the data production pipeline, These hard-coded subsets are uninformed of data changes, and cause bug detection to be delayed to downstream quality assurance activities. To address these problems, we have developed new representations of map data changes and checks, formally defined "check safety," and built a recommender system that dynamically and automatically selects and ranks a relevant subset of checks using signals from latest data changes. Empirical evaluation shows that it improves (1) efficiency by eliminating 65\% of checks unrelated to changes, (2) coverage by recommending and ranking change-related checks from the full set of candidate checks, previously excluded by the manual process, and (3) overall visibility into the data editing process by quickly and automatically identifying latest fault prone parts of the data.},
	pages = {223--232},
	booktitle = {Proceedings of the 41st International Conference on Software Engineering: Software Engineering in Practice},
	publisher = {{IEEE} Press},
	author = {Parthy, Abhaya and Silberstein, Leo and Kowalczyk, Emily and High, John-Paul and Nagarajan, Adithya and Memon, Atif},
	urldate = {2024-02-01},
	date = {2019-05-27},
	note = {3 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, {TFM}::{SOTA}::Descartado, automated data validation, data check recommender, safe test/check selection, ⛔ No {INSPIRE} recid found},
}

@article{fey_fast_2019,
	title = {Fast Graph Representation Learning with {PyTorch} Geometric},
	url = {http://arxiv.org/abs/1903.02428},
	doi = {10.48550/arXiv.1903.02428},
	abstract = {We introduce {PyTorch} Geometric, a library for deep learning on irregularly structured input data such as graphs, point clouds and manifolds, built upon {PyTorch}. In addition to general graph data structures and processing methods, it contains a variety of recently published methods from the domains of relational learning and 3D data processing. {PyTorch} Geometric achieves high data throughput by leveraging sparse {GPU} acceleration, by providing dedicated {CUDA} kernels and by introducing efficient mini-batch handling for input examples of different size. In this work, we present the library in detail and perform a comprehensive comparative study of the implemented methods in homogeneous evaluation scenarios.},
	author = {Fey, Matthias and Lenssen, Jan Eric},
	urldate = {2024-02-06},
	date = {2019-04-25},
	eprinttype = {arxiv},
	eprint = {1903.02428 [cs, stat]},
	note = {42 citations ({INSPIRE} 2024/5/19)
42 citations w/o self ({INSPIRE} 2024/5/19)},
	keywords = {Computer Science - Machine Learning, Statistics - Machine Learning},
}

@inproceedings{he_lightgcn_2020,
	location = {New York, {NY}, {USA}},
	title = {{LightGCN}: Simplifying and Powering Graph Convolution Network for Recommendation},
	isbn = {978-1-4503-8016-4},
	url = {https://doi.org/10.1145/3397271.3401063},
	doi = {10.1145/3397271.3401063},
	series = {{SIGIR} '20},
	shorttitle = {{LightGCN}},
	abstract = {Graph Convolution Network ({GCN}) has become new state-of-the-art for collaborative filtering. Nevertheless, the reasons of its effectiveness for recommendation are not well understood. Existing work that adapts {GCN} to recommendation lacks thorough ablation analyses on {GCN}, which is originally designed for graph classification tasks and equipped with many neural network operations. However, we empirically find that the two most common designs in {GCNs} -- feature transformation and nonlinear activation -- contribute little to the performance of collaborative filtering. Even worse, including them adds to the difficulty of training and degrades recommendation performance. In this work, we aim to simplify the design of {GCN} to make it more concise and appropriate for recommendation. We propose a new model named {LightGCN}, including only the most essential component in {GCN} -- neighborhood aggregation -- for collaborative filtering. Specifically, {LightGCN} learns user and item embeddings by linearly propagating them on the user-item interaction graph, and uses the weighted sum of the embeddings learned at all layers as the final embedding. Such simple, linear, and neat model is much easier to implement and train, exhibiting substantial improvements (about 16.0\% relative improvement on average) over Neural Graph Collaborative Filtering ({NGCF}) -- a state-of-the-art {GCN}-based recommender model -- under exactly the same experimental setting. Further analyses are provided towards the rationality of the simple {LightGCN} from both analytical and empirical perspectives.},
	pages = {639--648},
	booktitle = {Proceedings of the 43rd International {ACM} {SIGIR} Conference on Research and Development in Information Retrieval},
	publisher = {Association for Computing Machinery},
	author = {He, Xiangnan and Deng, Kuan and Wang, Xiang and Li, Yan and Zhang, {YongDong} and Wang, Meng},
	urldate = {2024-05-15},
	date = {2020-07-25},
	note = {1532 citations ({CrossRef} 2024/5/19)},
	keywords = {collaborative filtering, embedding propagation, graph neural network, recommendation, ⛔ No {INSPIRE} recid found},
}

@inproceedings{ji_re-visit_2020,
	location = {New York, {NY}, {USA}},
	title = {A Re-visit of the Popularity Baseline in Recommender Systems},
	isbn = {978-1-4503-8016-4},
	url = {https://dl.acm.org/doi/10.1145/3397271.3401233},
	doi = {10.1145/3397271.3401233},
	series = {{SIGIR} '20},
	abstract = {Popularity is often included in experimental evaluation to provide areference performance for a recommendation task. To understand how popularity baseline is defined and evaluated, we sample 12 papers from top-tier conferences including {KDD}, {WWW}, {SIGIR}, and {RecSys}, and 6 open source toolkits. We note that the widely {adoptedMostPop} baseline simply ranks items based on the number of interactions in the training data. We argue that the current evaluation of popularity (i) does not reflect the popular items at the time when a user interacts with the system, and (ii) may recommend items released after a user's last interaction with the system. On the widely used {MovieLens} dataset, we show that the performance of popularity could be significantly improved by 70\% or more, if we consider the popular itemsat the time point when a user interacts with the system. We further show that, on {MovieLens} dataset, the users having lower tendencies on movies tend to follow the crowd and rate more popular movies. Movie lovers who rate a large number of movies, rate movies based on their own preferences and interests. Through this study, we call for a re-visit of the popularity baseline in recommender system to better reflect its effectiveness.},
	pages = {1749--1752},
	booktitle = {Proceedings of the 43rd International {ACM} {SIGIR} Conference on Research and Development in Information Retrieval},
	publisher = {Association for Computing Machinery},
	author = {Ji, Yitong and Sun, Aixin and Zhang, Jie and Li, Chenliang},
	urldate = {2024-02-21},
	date = {2020-07-25},
	note = {20 citations ({CrossRef} 2024/5/19)},
	keywords = {evaluation, popularity, recommender systems, ⛔ No {INSPIRE} recid found},
}

@misc{rossi_temporal_2020,
	title = {Temporal Graph Networks for Deep Learning on Dynamic Graphs},
	url = {http://arxiv.org/abs/2006.10637},
	abstract = {Graph Neural Networks ({GNNs}) have recently become increasingly popular due to their ability to learn complex systems of relations or interactions arising in a broad spectrum of problems ranging from biology and particle physics to social networks and recommendation systems. Despite the plethora of different models for deep learning on graphs, few approaches have been proposed thus far for dealing with graphs that present some sort of dynamic nature (e.g. evolving features or connectivity over time). In this paper, we present Temporal Graph Networks ({TGNs}), a generic, efficient framework for deep learning on dynamic graphs represented as sequences of timed events. Thanks to a novel combination of memory modules and graph-based operators, {TGNs} are able to significantly outperform previous approaches being at the same time more computationally efficient. We furthermore show that several previous models for learning on dynamic graphs can be cast as specific instances of our framework. We perform a detailed ablation study of different components of our framework and devise the best configuration that achieves state-of-the-art performance on several transductive and inductive prediction tasks for dynamic graphs.},
	number = {{arXiv}:2006.10637},
	publisher = {{arXiv}},
	author = {Rossi, Emanuele and Chamberlain, Ben and Frasca, Fabrizio and Eynard, Davide and Monti, Federico and Bronstein, Michael},
	urldate = {2024-02-13},
	date = {2020-10-09},
	keywords = {Computer Science - Machine Learning, Statistics - Machine Learning, ⛔ No {INSPIRE} recid found},
}

@article{khanal_systematic_2020,
	title = {A systematic review: machine learning based recommendation systems for e-learning},
	volume = {25},
	issn = {1573-7608},
	url = {https://doi.org/10.1007/s10639-019-10063-9},
	doi = {10.1007/s10639-019-10063-9},
	shorttitle = {A systematic review},
	abstract = {The constantly growing offering of online learning materials to students is making it more difficult to locate specific information from data pools. Personalization systems attempt to reduce this complexity through adaptive e-learning and recommendation systems. The latter are, generally, based on machine learning techniques and algorithms and there has been progress. However, challenges remain in the form of data-scarcity, cold-start, scalability, time consumption and accuracy. In this article, we provide an overview of recommendation systems in the e-learning context following four strands: Content-Based, Collaborative Filtering, Knowledge-Based and Hybrid Systems. We developed a taxonomy that accounts for components required to develop an effective recommendation system. It was found that machine learning techniques, algorithms, datasets, evaluation, valuation and output are necessary components. This paper makes a significant contribution to the field by providing a much-needed overview of the current state of research and remaining challenges.},
	pages = {2635--2664},
	number = {4},
	journaltitle = {Education and Information Technologies},
	shortjournal = {Educ Inf Technol},
	author = {Khanal, Shristi Shakya and Prasad, P.W.C. and Alsadoon, Abeer and Maag, Angelika},
	urldate = {2024-02-01},
	date = {2020-07-01},
	langid = {english},
	note = {148 citations ({CrossRef} 2024/5/19)},
	keywords = {Collaborative filtering, Content-based, E-learning, Hybrid, Ignorebib, Recommendation system, Recommender, ⛔ No {INSPIRE} recid found},
}

@misc{moskalenko_scalable_2020,
	title = {Scalable Recommendation of Wikipedia Articles to Editors Using Representation Learning},
	url = {http://arxiv.org/abs/2009.11771},
	doi = {10.48550/arXiv.2009.11771},
	abstract = {Wikipedia is edited by volunteer editors around the world. Considering the large amount of existing content (e.g. over 5M articles in English Wikipedia), deciding what to edit next can be difficult, both for experienced users that usually have a huge backlog of articles to prioritize, as well as for newcomers who that might need guidance in selecting the next article to contribute. Therefore, helping editors to find relevant articles should improve their performance and help in the retention of new editors. In this paper, we address the problem of recommending relevant articles to editors. To do this, we develop a scalable system on top of Graph Convolutional Networks and Doc2Vec, learning how to represent Wikipedia articles and deliver personalized recommendations for editors. We test our model on editors' histories, predicting their most recent edits based on their prior edits. We outperform competitive implicit-feedback collaborative-filtering methods such as {WMRF} based on {ALS}, as well as a traditional {IR}-method such as content-based filtering based on {BM}25. All of the data used on this paper is publicly available, including graph embeddings for Wikipedia articles, and we release our code to support replication of our experiments. Moreover, we contribute with a scalable implementation of a state-of-art graph embedding algorithm as current ones cannot efficiently handle the sheer size of the Wikipedia graph.},
	number = {{arXiv}:2009.11771},
	publisher = {{arXiv}},
	author = {Moskalenko, Oleksii and Parra, Denis and Saez-Trumper, Diego},
	urldate = {2023-07-12},
	date = {2020-09-24},
	keywords = {Computer Science - Computers and Society, Computer Science - Information Retrieval, Curated by Javier, {TFM}::{SOTA}::{DONE}, Wikipedia, ⛔ No {INSPIRE} recid found},
}

@software{massquantity_librecommender_2020,
	title = {{LibRecommender}},
	rights = {{MIT} License},
	url = {https://github.com/massquantity/LibRecommender},
	author = {{massquantity}},
	date = {2020-07},
	keywords = {⛔ No {INSPIRE} recid found},
}

@article{hug_surprise_2020,
	title = {Surprise: A Python library for recommender systems},
	volume = {5},
	issn = {2475-9066},
	url = {https://joss.theoj.org/papers/10.21105/joss.02174},
	doi = {10.21105/joss.02174},
	shorttitle = {Surprise},
	pages = {2174},
	number = {52},
	journaltitle = {Journal of Open Source Software},
	shortjournal = {{JOSS}},
	author = {Hug, Nicolas},
	urldate = {2024-03-04},
	date = {2020-08-05},
	note = {114 citations ({CrossRef} 2024/5/19)},
	keywords = {⛔ No {INSPIRE} recid found},
}

@article{sajedi-badashian_vocabulary_2020,
	title = {Vocabulary and time based bug-assignment: A recommender system for open-source projects},
	volume = {50},
	rights = {© 2020 John Wiley \& Sons, Ltd.},
	issn = {1097-024X},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2830},
	doi = {10.1002/spe.2830},
	shorttitle = {Vocabulary and time based bug-assignment},
	abstract = {Bug-assignment ({BA}), the task of ranking developers in terms of the relevance of their expertise to fix a new bug report is time consuming, which is why substantial attention has been paid to developing methods for automating it. In this article, we describe a new {BA} approach that relies on two key intuitions. Similar to traditional {BA} methods, our method constructs the expertise profile of project developers, based on the textual elements of the bugs they have fixed in the past; unlike traditional methods, however, our method considers only the programming keywords in these bug descriptions, relying on Stack Overflow as the vocabulary for these keywords. The second key intuition of our method is that recent expertise is more relevant than past expertise, which is why our method weighs the relevance of a developer's expertise based on how recently they have fixed a bug with keywords similar to the bug at hand. We evaluated our {BA} method using a dataset of 93k bug-report assignments from 13 popular {GitHub} projects. In spite of its simplicity, our method predicts the assignee with high accuracy, outperforming state-of-the-art methods.},
	pages = {1539--1564},
	number = {8},
	journaltitle = {Software: Practice and Experience},
	author = {Sajedi-Badashian, Ali and Stroulia, Eleni},
	urldate = {2023-07-12},
	date = {2020},
	langid = {english},
	note = {10 citations ({CrossRef} 2024/5/19)},
	keywords = {Curated by Javier, {GitHub}, {TF}-{IDF}, {TFM}::{SOTA}::{DONE}, bug-assignment, information retrieval, software engineering, ⛔ No {INSPIRE} recid found},
}

@online{buterin_moving_2021,
	title = {Moving beyond coin voting governance},
	url = {https://vitalik.ca/general/2021/08/16/voting3.html},
	author = {Buterin, Vitalik},
	urldate = {2023-07-04},
	date = {2021-08-16},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{faqir-rhazoui_effect_2021,
	location = {New York, {NY}, {USA}},
	title = {Effect of the Gas Price Surges on User Activity in the {DAOs} of the Ethereum Blockchain},
	isbn = {978-1-4503-8095-9},
	url = {https://doi.org/10.1145/3411763.3451755},
	doi = {10.1145/3411763.3451755},
	series = {{CHI} {EA} '21},
	abstract = {Blockchain technology has enabled a thriving emergent ecosystem of tools and communities actively using decentralized systems. However, most blockchain infrastructure (e.g. Ethereum) requires users to pay some fees to execute their desired actions in these novel online services. To which extent an increase in the price of such fees negatively affects user activity? Would significant price surges deter users from using blockchain-enabled online services? In this work, we study the 2020 surge of transaction fee price in the Ethereum network, and analyze how that affected user activities. Our use cases are the blockchain-enabled Decentralized Autonomous Organizations ({DAOs}) from the platforms {DAOstack} and {DAOhaus}. Thus, we analyzed 5,580 transactions from 7,825 users grouped in 191 {DAO} communities, using a {VAR} model with a daily time series of the average fee value and the {DAO} operations. Our results show just a minor influence of the fee (gas) price and the activity of {DAO} users. The insensitivity of the activity to the fee price is an anomaly in a supposedly self-regulated market, and we consider this should be tackled in future implementations.},
	pages = {1--7},
	booktitle = {Extended Abstracts of the 2021 {CHI} Conference on Human Factors in Computing Systems},
	publisher = {Association for Computing Machinery},
	author = {Faqir-Rhazoui, Youssef and Ariza-Garzón, Miller-Janny and Arroyo, Javier and Hassan, Samer},
	urldate = {2023-06-19},
	date = {2021-05-08},
	note = {15 citations ({CrossRef} 2024/5/19)},
	keywords = {Blockchain, Causality, {DAOs}, {DeFi}, Decentralized Autonomous Organizations, Ethereum, Gas Price, ⛔ No {INSPIRE} recid found},
}

@misc{wang_graph_2020,
	title = {Graph Learning Approaches to Recommender Systems: A Review},
	url = {http://arxiv.org/abs/2004.11718},
	doi = {10.48550/arXiv.2004.11718},
	shorttitle = {Graph Learning Approaches to Recommender Systems},
	abstract = {Recent years have witnessed the fast development of the emerging topic of Graph Learning based Recommender Systems ({GLRS}). {GLRS} mainly employ the advanced graph learning approaches to model users' preferences and intentions as well as items' characteristics and popularity for Recommender Systems ({RS}). Differently from conventional {RS}, including content based filtering and collaborative filtering, {GLRS} are built on simple or complex graphs where various objects, e.g., users, items, and attributes, are explicitly or implicitly connected. With the rapid development of graph learning, exploring and exploiting homogeneous or heterogeneous relations in graphs is a promising direction for building advanced {RS}. In this paper, we provide a systematic review of {GLRS}, on how they obtain the knowledge from graphs to improve the accuracy, reliability and explainability for recommendations. First, we characterize and formalize {GLRS}, and then summarize and categorize the key challenges in this new research area. Then, we survey the most recent and important developments in the area. Finally, we share some new research directions in this vibrant area.},
	number = {{arXiv}:2004.11718},
	publisher = {{arXiv}},
	author = {Wang, Shoujin and Hu, Liang and Wang, Yan and He, Xiangnan and Sheng, Quan Z. and Orgun, Mehmet and Cao, Longbing and Wang, Nan and Ricci, Francesco and Yu, Philip S.},
	urldate = {2024-05-16},
	date = {2020-04-22},
	eprinttype = {arxiv},
	eprint = {2004.11718 [cs]},
	keywords = {Computer Science - Information Retrieval, ⛔ No {INSPIRE} recid found},
}

@article{virtanen_scipy_2020,
	title = {{SciPy} 1.0: fundamental algorithms for scientific computing in Python},
	volume = {17},
	issn = {1548-7091, 1548-7105},
	url = {https://www.nature.com/articles/s41592-019-0686-2},
	doi = {10.1038/s41592-019-0686-2},
	shorttitle = {{SciPy} 1.0},
	abstract = {Abstract
            {SciPy} is an open-source scientific computing library for the Python programming language. Since its initial release in 2001, {SciPy} has become a de facto standard for leveraging scientific algorithms in Python, with over 600 unique code contributors, thousands of dependent packages, over 100,000 dependent repositories and millions of downloads per year. In this work, we provide an overview of the capabilities and development practices of {SciPy} 1.0 and highlight some recent technical developments.},
	pages = {261--272},
	number = {3},
	journaltitle = {Nature Methods},
	shortjournal = {Nat Methods},
	author = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and Haberland, Matt and Reddy, Tyler and Cournapeau, David and Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and Bright, Jonathan and Van Der Walt, Stéfan J. and Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and Mayorov, Nikolay and Nelson, Andrew R. J. and Jones, Eric and Kern, Robert and Larson, Eric and Carey, C J and Polat, İlhan and Feng, Yu and Moore, Eric W. and VanderPlas, Jake and Laxalde, Denis and Perktold, Josef and Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and Harris, Charles R. and Archibald, Anne M. and Ribeiro, Antônio H. and Pedregosa, Fabian and Van Mulbregt, Paul and {SciPy 1.0 Contributors} and Vijaykumar, Aditya and Bardelli, Alessandro Pietro and Rothberg, Alex and Hilboll, Andreas and Kloeckner, Andreas and Scopatz, Anthony and Lee, Antony and Rokem, Ariel and Woods, C. Nathan and Fulton, Chad and Masson, Charles and Häggström, Christian and Fitzgerald, Clark and Nicholson, David A. and Hagen, David R. and Pasechnik, Dmitrii V. and Olivetti, Emanuele and Martin, Eric and Wieser, Eric and Silva, Fabrice and Lenders, Felix and Wilhelm, Florian and Young, G. and Price, Gavin A. and Ingold, Gert-Ludwig and Allen, Gregory E. and Lee, Gregory R. and Audren, Hervé and Probst, Irvin and Dietrich, Jörg P. and Silterra, Jacob and Webber, James T and Slavič, Janko and Nothman, Joel and Buchner, Johannes and Kulick, Johannes and Schönberger, Johannes L. and De Miranda Cardoso, José Vinícius and Reimer, Joscha and Harrington, Joseph and Rodríguez, Juan Luis Cano and Nunez-Iglesias, Juan and Kuczynski, Justin and Tritz, Kevin and Thoma, Martin and Newville, Matthew and Kümmerer, Matthias and Bolingbroke, Maximilian and Tartre, Michael and Pak, Mikhail and Smith, Nathaniel J. and Nowaczyk, Nikolai and Shebanov, Nikolay and Pavlyk, Oleksandr and Brodtkorb, Per A. and Lee, Perry and McGibbon, Robert T. and Feldbauer, Roman and Lewis, Sam and Tygier, Sam and Sievert, Scott and Vigna, Sebastiano and Peterson, Stefan and More, Surhud and Pudlik, Tadeusz and Oshima, Takuya and Pingel, Thomas J. and Robitaille, Thomas P. and Spura, Thomas and Jones, Thouis R. and Cera, Tim and Leslie, Tim and Zito, Tiziano and Krauss, Tom and Upadhyay, Utkarsh and Halchenko, Yaroslav O. and Vázquez-Baeza, Yoshiki},
	urldate = {2024-03-04},
	date = {2020-03-02},
	langid = {english},
	note = {3401 citations ({INSPIRE} 2024/5/19)
3344 citations w/o self ({INSPIRE} 2024/5/19)},
}

@inproceedings{strand_using_2020,
	location = {New York, {NY}, {USA}},
	title = {Using a context-aware approach to recommend code reviewers: findings from an industrial case study},
	isbn = {978-1-4503-7123-0},
	url = {https://dl.acm.org/doi/10.1145/3377813.3381365},
	doi = {10.1145/3377813.3381365},
	series = {{ICSE}-{SEIP} '20},
	shorttitle = {Using a context-aware approach to recommend code reviewers},
	abstract = {Code review is a commonly used practice in software development. It refers to the process of reviewing new code changes before they are merged with the code base. However, to perform the review, developers are mostly assigned manually to code changes. This may lead to problems such as: a time-consuming selection process, limited pool of known candidates and risk of over-allocation of a few reviewers. To address the above problems, we developed Carrot, a machine learning-based tool to recommend code reviewers. We conducted an improvement case study at Ericsson. We evaluated Carrot using a mixed approach. we evaluated the prediction accuracy using historical data and the metrical Mean Reciprocal Rank ({MRR}). Furthermore, we deployed the tool in one Ericsson project and evaluated how adequate the recommendations were from the point of view of the tool users and the recommended reviewers. We also asked the opinion of senior developers about the usefulness of the tool. The results show that Carrot can help identify relevant non-obvious reviewers and be of great assistance to new developers. However, there were mixed opinions on Carrot's ability to assist with workload balancing and the decrease code review lead time.},
	pages = {1--10},
	booktitle = {Proceedings of the {ACM}/{IEEE} 42nd International Conference on Software Engineering: Software Engineering in Practice},
	publisher = {Association for Computing Machinery},
	author = {Strand, Anton and Gunnarson, Markus and Britto, Ricardo and Usman, Muhmmad},
	urldate = {2024-02-01},
	date = {2020-09-18},
	note = {11 citations ({CrossRef} 2024/5/19)},
	keywords = {{TFM}::{SOTA}::{TODO}, ⛔ No {INSPIRE} recid found},
}

@inproceedings{yan_auto-suggest_2020,
	location = {New York, {NY}, {USA}},
	title = {Auto-Suggest: Learning-to-Recommend Data Preparation Steps Using Data Science Notebooks},
	isbn = {978-1-4503-6735-6},
	url = {https://dl.acm.org/doi/10.1145/3318464.3389738},
	doi = {10.1145/3318464.3389738},
	series = {{SIGMOD} '20},
	shorttitle = {Auto-Suggest},
	abstract = {Data preparation is widely recognized as the most time-consuming process in modern business intelligence ({BI}) and machine learning ({ML}) projects. Automating complex data preparation steps (e.g., Pivot, Unpivot, Normalize-{JSON}, etc.)holds the potential to greatly improve user productivity, and has therefore become a central focus of research. We propose a novel approach to "auto-suggest" contextualized data preparation steps, by "learning" from how data scientists would manipulate data, which are documented by data science notebooks widely available today. Specifically, we crawled over 4M Jupyter notebooks on {GitHub}, and replayed them step-by-step, to observe not only full input/output tables (data-frames) at each step, but also the exact data-preparation choices data scientists make that they believe are best suited to the input data (e.g., how input tables are Joined/Pivoted/Unpivoted, etc.). By essentially "logging" how data scientists interact with diverse tables, and using the resulting logs as a proxy of "ground truth", we can learn-to-recommend data preparation steps best suited to given user data, just like how search engines (Google or Bing) leverage their click-through logs to learn-to-rank documents. This data-driven and log-driven approach leverages the "collective wisdom" of data scientists embodied in the notebooks, and is shown to significantly outperform strong baselines including commercial systems in terms of accuracy.},
	pages = {1539--1554},
	booktitle = {Proceedings of the 2020 {ACM} {SIGMOD} International Conference on Management of Data},
	publisher = {Association for Computing Machinery},
	author = {Yan, Cong and He, Yeye},
	urldate = {2024-02-01},
	date = {2020-05-31},
	note = {32 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, data preparation, data wrangling, learning-to-recommend, pivot and unpivot, ⛔ No {INSPIRE} recid found},
}

@article{faqir-rhazoui_comparative_2021,
	title = {A comparative analysis of the platforms for decentralized autonomous organizations in the Ethereum blockchain},
	volume = {12},
	issn = {1869-0238},
	url = {https://doi.org/10.1186/s13174-021-00139-6},
	doi = {10.1186/s13174-021-00139-6},
	abstract = {Blockchain technology has enabled a new kind of distributed systems. Beyond its early applications in Finance, it has also allowed the emergence of novel new ways of governance and coordination. The most relevant of these are the so-called Decentralized Autonomous Organizations ({DAOs}). {DAOs} typically implement decision-making systems to make it possible for their online community to reach agreements. As a result of these agreements, the {DAO} operates automatically by executing the appropriate portion of code on the blockchain network (e.g., hire people, delivers payments, invests in financial products, etc). In the last few years, several platforms such as Aragon, {DAOstack} and {DAOhaus}, have emerged to facilitate the creation of {DAOs}. As a result, hundreds of these new organizations have appeared, with their communities interacting mediated by blockchain. However, the literature has yet to appropriately explore empirically this phenomena. In this paper, we aim to shed light on the current state of the {DAO} ecosystem. We review the three main platforms nowadays (Aragon, {DAOstack}, {DAOhaus}) which facilitate the creation and management of {DAOs}. Thus, we introduce their main differences, and compare them using quantitative metrics. For such comparison, we retrieve data from both the main Ethereum network (mainnet) and a parallel Ethereum network ({xDai}). We analyze data from 72,320 users and 2,353 {DAO} communities in order to study the three ecosystems across four dimensions: growth, activity, voting system and funds. Our results show that there are notable differences among the {DAO} platforms in terms of growth and activity, and also in terms of voting results. Still, we consider that our work is only a first step and that further research is needed to better understand these communities, and evaluate their level of accomplishment in reaching decentralized governance.},
	pages = {9},
	number = {1},
	journaltitle = {Journal of Internet Services and Applications},
	shortjournal = {Journal of Internet Services and Applications},
	author = {Faqir-Rhazoui, Youssef and Arroyo, Javier and Hassan, Samer},
	urldate = {2024-04-25},
	date = {2021-10-01},
	note = {43 citations ({CrossRef} 2024/5/19)},
	keywords = {Blockchain, {DAO}, Decentralized autonomous organization, Distributed systems, Ethereum, Governance, Online community, Quantitative research, Voting, {xDai}, ⛔ No {INSPIRE} recid found},
}

@inproceedings{cantador_personalized_2017,
	location = {New York, {NY}, {USA}},
	title = {Personalized recommendations in e-participation: offline experiments for the 'Decide Madrid' platform},
	isbn = {978-1-4503-5370-0},
	url = {https://dl.acm.org/doi/10.1145/3127325.3127330},
	doi = {10.1145/3127325.3127330},
	series = {{CitRec} '17},
	shorttitle = {Personalized recommendations in e-participation},
	abstract = {In e-participation platforms, citizens suggest, discuss and vote online for initiatives aimed to address a wide range of issues and problems in a city, such as economic development, public safety, budges, infrastructure, housing, environment, social rights, and health care. For a particular citizen, the number of proposals and debates may be overwhelming, and recommender systems could help filtering and ranking those that are more relevant. Focusing on a particular case, the `Decide Madrid' platform, in this paper we empirically investigate which sources of user preferences and recommendation approaches could be more effective, in terms of several aspects, namely precision, coverage and diversity.},
	pages = {1--6},
	booktitle = {Proceedings of the International Workshop on Recommender Systems for Citizens},
	publisher = {Association for Computing Machinery},
	author = {Cantador, Iván and Bellogín, Alejandro and Cortés-Cediel, María E. and Gil, Olga},
	urldate = {2024-03-11},
	date = {2017},
	note = {15 citations ({CrossRef} 2024/5/19)},
	keywords = {citizen participation, e-participation, folksonomy, recommender systems, smart cities, social tagging, urban planning, ⛔ No {INSPIRE} recid found},
}

@inproceedings{he_automatic_2021,
	title = {Automatic Bug Triage Using Hierarchical Attention Networks},
	url = {https://ieeexplore.ieee.org/document/9742064},
	doi = {10.1109/QRS-C55045.2021.00158},
	abstract = {Bug triage, which plays a critical role in software maintenance, mainly refers to the process of assigning a bug report to an appropriate developer who could fix it. Manual bug triage, especially in open-source projects, is quite a burden to developers. To address this problem, many methods have been proposed for automatic or semi-automatic bug triage, which can be observed as a task under text classification in natural language processing. In this article, we present an end-to-end approach using hierarchical attention networks to establish an automatic bug triage system. Considering syntactic and semantic information in bug reports, two methods, Word2Vec and {GloVe}, are provided to pre-train word vector presentation on untriaged reports to attain high speed and accuracy, respectively. Fine-tuned word vectors achieve better results during training. We validate the performance on five large-scale public datasets. From the results of the experiments, our approach achieves higher accuracy amongst existing methods based on deep neural networks.},
	eventtitle = {2021 {IEEE} 21st International Conference on Software Quality, Reliability and Security Companion ({QRS}-C)},
	pages = {1043--1049},
	booktitle = {2021 {IEEE} 21st International Conference on Software Quality, Reliability and Security Companion ({QRS}-C)},
	author = {He, Huoliang and Yang, {ShunKun}},
	urldate = {2024-01-31},
	date = {2021-12},
	note = {2 citations ({CrossRef} 2024/5/19)
{ISSN}: 2693-9371},
	keywords = {Computer bugs, Neural networks, Semantics, Software maintenance, Software quality, {TFM}::{SOTA}::{DONE}, Text categorization, Training, bug triage, deep learning, hierarchical attention networks, text classification, ⛔ No {INSPIRE} recid found},
}

@article{hassan_decentralized_2021,
	title = {Decentralized Autonomous Organization},
	volume = {10},
	issn = {2197-6775},
	url = {https://policyreview.info/glossary/DAO},
	doi = {10.14763/2021.2.1556},
	abstract = {A {DAO} is a blockchain-based system that enables people to coordinate and govern themselves mediated by a set of self-executing rules deployed on a public blockchain, and whose governance is decentralised (i.e., independent from central control).},
	number = {2},
	journaltitle = {Internet Policy Review},
	author = {Hassan, Samer and Filippi, Primavera De},
	urldate = {2023-07-07},
	date = {2021-04-20},
	note = {122 citations ({CrossRef} 2024/5/19)},
	keywords = {{ComSoc}::Citable, ⛔ No {INSPIRE} recid found},
}

@online{buterin_notes_2017,
	title = {Notes on Blockchain Governance},
	url = {https://vitalik.ca/general/2017/12/17/voting.html},
	author = {Buterin, Vitalik},
	urldate = {2023-07-04},
	date = {2017-12-17},
	keywords = {{ComSoc}::Citable, ⛔ No {INSPIRE} recid found},
}

@online{kastrenakes_crypto_2021,
	title = {Crypto collective raises \$27 million to bid for rare copy of {US} Constitution},
	url = {https://www.theverge.com/2021/11/17/22787993/constitutiondao-crypto-buy-us-constitution-copy-sothebys-ethereum},
	abstract = {It’s expected to sell for \$20 million at auction.},
	titleaddon = {The Verge},
	author = {Kastrenakes, Jacob},
	urldate = {2024-04-11},
	date = {2021-11-17},
	langid = {english},
	keywords = {⛔ No {INSPIRE} recid found},
}

@article{rozas_when_2021,
	title = {When Ostrom Meets Blockchain: Exploring the Potentials of Blockchain for Commons Governance},
	volume = {11},
	issn = {2158-2440},
	url = {https://doi.org/10.1177/21582440211002526},
	doi = {10.1177/21582440211002526},
	shorttitle = {When Ostrom Meets Blockchain},
	abstract = {Blockchain technologies have generated enthusiasm, yet their potential to enable new forms of governance remains largely unexplored. Two confronting standpoints dominate the emergent debate around blockchain-based governance: discourses characterized by the presence of techno-determinist and market-driven values, which tend to ignore the complexity of social organization; and critical accounts of such discourses which, while contributing to identifying limitations, consider the role of traditional centralized institutions as inherently necessary to enable democratic forms of governance. In this article, we draw on Ostrom’s principles for self-governance of communities to explore the transformative potential of blockchain beyond such standpoints. We approach blockchain through the identification and conceptualization of six affordances that this technology may provide to communities: tokenization, self-enforcement and formalization of rules, autonomous automatization, decentralization of power over the infrastructure, increasing transparency, and codification of trust. For each affordance, we carry out a detailed analysis situating each in the context of Ostrom’s principles, considering both the potentials of algorithmic governance and the importance of incorporating communities’ social practices into blockchain-based tools to foster forms of self-governance. The relationships found between these affordances and Ostrom’s principles allow us to provide a perspective focused on blockchain-based commons governance.},
	pages = {21582440211002526},
	number = {1},
	journaltitle = {Sage Open},
	author = {Rozas, David and Tenorio-Fornés, Antonio and Díaz-Molina, Silvia and Hassan, Samer},
	urldate = {2024-03-15},
	date = {2021-01-01},
	langid = {english},
	note = {63 citations ({CrossRef} 2024/5/19)
Publisher: {SAGE} Publications},
	keywords = {Ignorebib, ⛔ No {INSPIRE} recid found},
}

@inproceedings{qian_learning_2021,
	location = {New York, {NY}, {USA}},
	title = {Learning to Recommend Visualizations from Data},
	isbn = {978-1-4503-8332-5},
	url = {https://dl.acm.org/doi/10.1145/3447548.3467224},
	doi = {10.1145/3447548.3467224},
	series = {{KDD} '21},
	abstract = {Visualization recommendation is important for exploratory analysis and making sense of the data quickly by automatically recommending relevant visualizations to the user. In this work, we propose the first end-to-end {ML}-based visualization recommendation system that leverages a large corpus of datasets and their relevant visualizations to learn a visualization recommendation model automatically. Then, given a new unseen dataset from an arbitrary user, the model automatically generates visualizations for that new dataset, derives scores for the visualizations, and outputs a list of recommended visualizations to the user ordered by effectiveness. We also describe an evaluation framework to quantitatively evaluate visualization recommendation models learned from a large corpus of visualizations and datasets. Through quantitative experiments, a user study, and qualitative analysis, we show that our end-to-end {ML}-based system recommends more effective and useful visualizations compared to existing state-of-the-art rule-based systems.},
	pages = {1359--1369},
	booktitle = {Proceedings of the 27th {ACM} {SIGKDD} Conference on Knowledge Discovery \& Data Mining},
	publisher = {Association for Computing Machinery},
	author = {Qian, Xin and Rossi, Ryan A. and Du, Fan and Kim, Sungchul and Koh, Eunyee and Malik, Sana and Lee, Tak Yeon and Chan, Joel},
	urldate = {2024-02-01},
	date = {2021},
	note = {18 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, ⛔ No {INSPIRE} recid found},
}

@article{zhang_ksap_2016,
	title = {{KSAP}: An approach to bug report assignment using {KNN} search and heterogeneous proximity},
	volume = {70},
	issn = {0950-5849},
	url = {https://www.sciencedirect.com/science/article/pii/S0950584915001706},
	doi = {10.1016/j.infsof.2015.10.004},
	shorttitle = {{KSAP}},
	abstract = {Context
Bug report assignment, namely, to assign new bug reports to developers for timely and effective bug resolution, is crucial for software quality assurance. However, with the increasing size of software system, it is difficult to assign bugs to appropriate developers for bug managers.
Objective
This paper propose an approach, called {KSAP} (K-nearest-neighbor search and heterogeneous proximity), to improve automatic bug report assignment by using historical bug reports and heterogeneous network of bug repository.
Method
When a new bug report was submitted to the bug repository, {KSAP} assigns developers for the bug report by using a two-phase procedure. The first phase is to search historically-resolved similar bug reports to the new bug report by K-nearest-neighbor ({KNN}) method. The second phase is to rank the developers who contributed to those similar bug reports by heterogeneous proximity.
Results
We collected bug repositories of Mozilla, Eclipse, Apache Ant and Apache Tomcat6 projects to investigate the performance of the proposed {KSAP} approach. Experimental results demonstrate that {KSAP} can improve the recall of bug report assignment between 7.5–32.25\% in comparison with the state of art techniques. When there is only a small number of developer collaborations on common bug reports, {KSAP} has shown its excellence over other sate of art techniques. When we tune the parameters of the number of historically-resolved similar bug reports (K) and the number of developers (Q) for recommendation, {KSAP} keeps its superiority steadily.
Conclusion
This is the first paper to demonstrate how to automatically build heterogeneous network of a bug repository and extract meta-paths of developer collaborations from the heterogeneous network for bug report assignment.},
	pages = {68--84},
	journaltitle = {Information and Software Technology},
	shortjournal = {Information and Software Technology},
	author = {Zhang, Wen and Wang, Song and Wang, Qing},
	urldate = {2024-01-31},
	date = {2016-02-01},
	note = {39 citations ({CrossRef} 2024/5/19)},
	keywords = {Bug report assignment, Developer recommendation, Heterogeneous network, Heterogeneous proximity, Ignorebib, {TFM}::{SOTA}::Descartado, ⛔ No {INSPIRE} recid found},
}

@online{higgins_26_2017,
	title = {\$26 Million: Blockchain {VR} Project Decentraland Raises New Funding in {ICO}},
	url = {https://www.coindesk.com/markets/2017/08/18/26-million-blockchain-vr-project-decentraland-raises-new-funding-in-ico/},
	shorttitle = {\$26 Million},
	abstract = {A virtual reality project built using blockchain technology has raised \$26 million in ether via an initial coin offering.},
	titleaddon = {{CoinDesk}},
	author = {Higgins, Stan},
	urldate = {2024-02-15},
	date = {2017-08-18},
	langid = {english},
	note = {Section: Markets},
	keywords = {⛔ No {INSPIRE} recid found},
}

@article{wu_first_2021,
	title = {A first look at blockchain-based decentralized applications},
	volume = {51},
	rights = {© 2019 John Wiley \& Sons, Ltd.},
	issn = {1097-024X},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2751},
	doi = {10.1002/spe.2751},
	abstract = {With the increasing popularity of blockchain technologies in recent years, blockchain-based decentralized applications ({DApps} for short in this paper) have been rapidly developed and widely adopted in many areas, being a hot topic in both academia and industry. Despite of the importance of {DApps}, we still have quite little understanding of {DApps} along with its ecosystem. To bridge the knowledge gap, this paper presents the first comprehensive empirical study of blockchain-based {DApps} to date, based on an extensive dataset of 995 Ethereum {DApps} and 29,846,075 transaction logs over them. We make a descriptive analysis of the popularity of {DApps}, summarize the patterns of how {DApps} use smart contracts to access the underlying blockchain, and explore the worth-addressing issues of deploying and operating {DApps}. Based on the findings, we propose some implications for {DApp} users to select proper {DApps}, for {DApp} developers to improve the efficiency of {DApps}, and for blockchain vendors to enhance the support of {DApps}.},
	pages = {2033--2050},
	number = {10},
	journaltitle = {Software: Practice and Experience},
	author = {Wu, Kaidong and Ma, Yun and Huang, Gang and Liu, Xuanzhe},
	urldate = {2024-04-11},
	date = {2021},
	langid = {english},
	note = {49 citations ({CrossRef} 2024/5/19)},
	keywords = {Ethereum, decentralized applications, empirical study, smart contract, ⛔ No {INSPIRE} recid found},
}

@report{vicerrectorado_de_tecnologia_y_sostenibilidad_informe_2021,
	location = {Madrid},
	title = {Informe Huella de Carbono {UCM}},
	url = {https://www.ucm.es/sostenibilidad/huellaucm},
	institution = {Universidad Complutense de Madrid},
	author = {{Vicerrectorado de Tecnología y Sostenibilidad}},
	date = {2021},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{hirzel_sliding-window_2017,
	location = {New York, {NY}, {USA}},
	title = {Sliding-Window Aggregation Algorithms: Tutorial},
	isbn = {978-1-4503-5065-5},
	url = {https://dl.acm.org/doi/10.1145/3093742.3095107},
	doi = {10.1145/3093742.3095107},
	series = {{DEBS} '17},
	shorttitle = {Sliding-Window Aggregation Algorithms},
	abstract = {Stream processing is important for analyzing continuous streams of data in real time. Sliding-window aggregation is both needed for many streaming applications and surprisingly hard to do efficiently. Picking the wrong aggregation algorithm causes poor performance, and knowledge of the right algorithms and when to use them is scarce. This paper was written to accompany a tutorial, but can be read as a stand-alone survey that aims to better educate the community about fast sliding-window aggregation algorithms for a variety of common aggregation operations and window types.},
	pages = {11--14},
	booktitle = {Proceedings of the 11th {ACM} International Conference on Distributed and Event-based Systems},
	publisher = {Association for Computing Machinery},
	author = {Hirzel, Martin and Schneider, Scott and Tangwongsan, Kanat},
	urldate = {2024-01-25},
	date = {2017-06-08},
	note = {16 citations ({CrossRef} 2024/5/19)},
	keywords = {Survey, aggregation, incremental algorithms, windows, ⛔ No {INSPIRE} recid found},
}

@article{afsar_reinforcement_2022,
	title = {Reinforcement Learning based Recommender Systems: A Survey},
	volume = {55},
	issn = {0360-0300},
	url = {https://dl.acm.org/doi/10.1145/3543846},
	doi = {10.1145/3543846},
	shorttitle = {Reinforcement Learning based Recommender Systems},
	abstract = {Recommender systems ({RSs}) have become an inseparable part of our everyday lives. They help us find our favorite items to purchase, our friends on social networks, and our favorite movies to watch. Traditionally, the recommendation problem was considered to be a classification or prediction problem, but it is now widely agreed that formulating it as a sequential decision problem can better reflect the user-system interaction. Therefore, it can be formulated as a Markov decision process ({MDP}) and be solved by reinforcement learning ({RL}) algorithms. Unlike traditional recommendation methods, including collaborative filtering and content-based filtering, {RL} is able to handle the sequential, dynamic user-system interaction and to take into account the long-term user engagement. Although the idea of using {RL} for recommendation is not new and has been around for about two decades, it was not very practical, mainly because of scalability problems of traditional {RL} algorithms. However, a new trend has emerged in the field since the introduction of deep reinforcement learning ({DRL}), which made it possible to apply {RL} to the recommendation problem with large state and action spaces. In this paper, a survey on reinforcement learning based recommender systems ({RLRSs}) is presented. Our aim is to present an outlook on the field and to provide the reader with a fairly complete knowledge of key concepts of the field. We first recognize and illustrate that {RLRSs} can be generally classified into {RL}- and {DRL}-based methods. Then, we propose an {RLRS} framework with four components, i.e., state representation, policy optimization, reward formulation, and environment building, and survey {RLRS} algorithms accordingly. We highlight emerging topics and depict important trends using various graphs and tables. Finally, we discuss important aspects and challenges that can be addressed in the future.},
	pages = {145:1--145:38},
	number = {7},
	journaltitle = {{ACM} Computing Surveys},
	shortjournal = {{ACM} Comput. Surv.},
	author = {Afsar, M. Mehdi and Crump, Trafford and Far, Behrouz},
	urldate = {2023-10-31},
	date = {2022},
	note = {103 citations ({CrossRef} 2024/5/19)},
	keywords = {Ignorebib, Recommender systems, reinforcement learning, ⛔ No {INSPIRE} recid found},
}

@unpublished{patka_exploiting_2022,
	title = {Exploiting Inattention \& Optimism in {DAOs}},
	url = {https://archive.devcon.org/archive/watch/6/exploiting-inattention-and-optimism-in-daos},
	abstract = {Many {DAOs} have adopted Oracle based tools to make gassless votes executable. I demonstrated an exploit of one such oracle that was possible because the other users on the oracle app were undercapitalized or not paying attention. This type of attack highlights the weaknesses and risks of many assumptions people have about the attention span of {DAO} members, and execution conditions. I will show common misconfigurations of tools that are the most risky, and show people how they can fix them.},
	note = {Devcon 6},
	author = {Patka, Isaac},
	urldate = {2024-02-26},
	date = {2022-10},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{arroyo_dao-analyzer_2022,
	location = {New York, {NY}, {USA}},
	title = {{DAO}-Analyzer: Exploring Activity and Participation in Blockchain Organizations},
	isbn = {978-1-4503-9190-0},
	url = {https://dl.acm.org/doi/10.1145/3500868.3559707},
	doi = {10.1145/3500868.3559707},
	series = {{CSCW}'22 Companion},
	shorttitle = {{DAO}-Analyzer},
	abstract = {Decentralized Autonomous Organizations ({DAOs}) are a new kind of organization that relies on blockchain software to govern their projects. Typically, {DAO} members may put forward and vote on proposals. For instance these proposals may consist on someone doing some tasks in exchange for a share of the {DAO} crypto-funds. In recent times, {DAOs} have gained a remarkable adoption, and yet they are still understudied by the academic literature. In this work, we present a visual analytics tool to study {DAO} activity focusing on their participation and temporal evolution. Our tool will hopefully help to stimulate research on this new kind of online community and collaborative software.},
	pages = {193--196},
	booktitle = {Companion Publication of the 2022 Conference on Computer Supported Cooperative Work and Social Computing},
	publisher = {Association for Computing Machinery},
	author = {Arroyo, Javier and Davó, David and Martínez-Vicente, Elena and Faqir-Rhazoui, Youssef and Hassan, Samer},
	urldate = {2023-11-14},
	date = {2022-11-08},
	note = {2 citations ({CrossRef} 2024/5/19)},
	keywords = {{DAO}, Ethereum, blockchain, decentralized autonomous organization, governance, online community, ⛔ No {INSPIRE} recid found},
}

@online{buterin_daos_2022,
	title = {{DAOs} are not corporations: where decentralization in autonomous organizations matters},
	url = {https://vitalik.ca/general/2022/09/20/daos.html},
	author = {Buterin, Vitalik},
	urldate = {2023-07-04},
	date = {2022-09-20},
	keywords = {{ComSoc}::Citable, Ignorebib, ⛔ No {INSPIRE} recid found},
}

@article{jirvelin_ir_2017,
	title = {{IR} evaluation methods for retrieving highly relevant documents},
	volume = {51},
	abstract = {This paper proposes evaluation methods based on the use of non-dichotomous relevance judgements in {IR} experiments. It is argued that evaluation methods should credit {IR} methods for their ability to retrieve highly relevant documents. This is desirable from the user point of view in modem large {IR} environments. The proposed methods are (1) a novel application of P-R curves and average precision computations based on separate recall bases for documents of different degrees of relevance, and (2) two novel measures computing the cumulative gain the user obtains by examining the retrieval result up to a given ranked position. We then demonstrate the use of these evaluation methods in a case study on the effectiveness of query types, based on combinations of query structures and expansion, in retrieving documents of various degrees of relevance. The test was run with a best match retrieval system ({InQuery} I) in a text database consisting of newspaper articles. The results indicate that the tested strong query structures are most effective in retrieving highly relevant documents. The differences between the query types are practically essential and statistically significant. More generally, the novel evaluation methods and the case demonstrate that non-dichotomous relevance assessments are applicable in {IR} experiments, may reveal interesting phenomena, and allow harder testing of {IR} methods.},
	number = {2},
	journaltitle = {{ACM} {SIGIR} Forum},
	author = {Jirvelin, Kalervo and Kekiiliinen, Jaana},
	date = {2017},
	langid = {english},
	keywords = {Ignorebib, ⛔ No {INSPIRE} recid found},
}

@online{intel_procesador_2022,
	title = {Procesador Intel® Core™ i9-12900KS (caché de 30 {MB}, hasta 5,50 {GHz}) - Especificaciones de productos},
	url = {https://www.intel.la/content/www/xl/es/products/sku/225916/intel-core-i912900ks-processor-30m-cache-up-to-5-50-ghz/specifications.html},
	abstract = {Procesador Intel® Core™ i9-12900KS (caché de 30 {MB}, hasta 5,50 {GHz}) referencia rápida con especificaciones, características y tecnologías.},
	titleaddon = {Intel},
	author = {{Intel}},
	urldate = {2024-02-02},
	date = {2022},
	langid = {spanish},
	keywords = {⛔ No {INSPIRE} recid found},
}

@inproceedings{buryakov_using_2022,
	location = {Cham},
	title = {Using Open Government Data to Facilitate the Design of Voting Advice Applications},
	isbn = {978-3-031-23213-8},
	doi = {10.1007/978-3-031-23213-8_2},
	series = {Lecture Notes in Computer Science},
	abstract = {In the process of statement selection for online voting advice applications ({VAAs}) a considerable amount of time is spent for analyzing the domestic and foreign policies of a given country. However, harnessing large amounts of available open data, which would be useful in this design process, manually is impractical. In order to facilitate such time-consuming and labor-intensive work, the authors propose a system to assist {VAA} designers formulating policy statements. Using advanced language modeling and text summarization techniques and based on open government data related to politics during the legislature preceding an election, the system produces suggestions applicable for revising or creating new {VAA} policy statements. Experiments conducted on {VAA} and e-petition data from Taiwan show that the proposed system can generate meaningful suggestions for {VAA} designers and could therefore help reducing the cost of the {VAA} design process.},
	pages = {19--34},
	booktitle = {Electronic Participation},
	publisher = {Springer Nature Switzerland},
	author = {Buryakov, Daniil and Kovacs, Mate and Kryssanov, Victor and Serdült, Uwe},
	editor = {Krimmer, Robert and Rohde Johannessen, Marius and Lampoltshammer, Thomas and Lindgren, Ida and Parycek, Peter and Schwabe, Gerhard and Ubacht, Jolien},
	date = {2022},
	langid = {english},
	note = {1 citations ({CrossRef} 2024/5/19)},
	keywords = {Open data, {TFM}::{SOTA}::{TODO}, Text summarization, Topic modeling, Voting advice applications, e-petition data, ⛔ No {INSPIRE} recid found},
}

@inproceedings{cantador_whats_2018,
	location = {New York, {NY}, {USA}},
	title = {What's going on in my city? recommender systems and electronic participatory budgeting},
	isbn = {978-1-4503-5901-6},
	url = {https://dl.acm.org/doi/10.1145/3240323.3240391},
	doi = {10.1145/3240323.3240391},
	series = {{RecSys} '18},
	shorttitle = {What's going on in my city?},
	abstract = {In this paper, we present electronic participatory budgeting ({ePB}) as a novel application domain for recommender systems. On public data from the {ePB} platforms of three major {US} cities - Cambridge, Miami and New York City-, we evaluate various methods that exploit heterogeneous sources and models of user preferences to provide personalized recommendations of citizen proposals. We show that depending on characteristics of the cities and their participatory processes, particular methods are more effective than others for each city. This result, together with open issues identified in the paper, call for further research in the area.},
	pages = {219--223},
	booktitle = {Proceedings of the 12th {ACM} Conference on Recommender Systems},
	publisher = {Association for Computing Machinery},
	author = {Cantador, Iván and Cortés-Cediel, María E. and Fernández, Miriam and Alani, Harith},
	urldate = {2024-03-11},
	date = {2018-09-27},
	note = {6 citations ({CrossRef} 2024/5/19)},
	keywords = {⛔ No {INSPIRE} recid found},
}

@online{tangermann_12_2022,
	title = {\$1.2 Billion Metaverse Horrified by Report It Only Had 38 Active Users},
	url = {https://futurism.com/the-byte/metaverse-decentraland-report-active-users},
	abstract = {Metaverse project Decentraland, a sandbox environment that allows users to buy and sell virtual real estate, isn't exactly teeming with people.},
	titleaddon = {The Byte},
	author = {Tangermann, Victor},
	urldate = {2024-02-15},
	date = {2022-12-10},
	keywords = {⛔ No {INSPIRE} recid found},
}
